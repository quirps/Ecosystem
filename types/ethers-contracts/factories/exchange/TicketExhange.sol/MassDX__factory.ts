/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  MassDX,
  MassDXInterface,
} from "../../../exchange/TicketExhange.sol/MassDX";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_exchangeRewardERC1155",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    name: "SaleCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint96",
            name: "saleId",
            type: "uint96",
          },
          {
            components: [
              {
                internalType: "address",
                name: "ticketAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "ticketId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ticketAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenAmountPerTicket",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
            ],
            internalType: "struct MassDX.SaleInput",
            name: "sale",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct MassDX.TotalSale",
        name: "",
        type: "tuple",
      },
    ],
    name: "SaleCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint96",
        name: "saleId",
        type: "uint96",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ticketAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sellerFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timePoolTokensMinted",
        type: "uint256",
      },
    ],
    name: "SaleExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "timeStart",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "enum LibTimeManagement.StakeDayInterval",
        name: "stakeInterval",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeAmouunt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakerRewardsCollected",
    type: "event",
  },
  {
    inputs: [],
    name: "TIME_POOL_FEE_PERCENTAGE",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "_stakeIds",
        type: "uint256[]",
      },
      {
        internalType: "enum LibTimeManagement.StakeDayInterval[]",
        name: "_stakeIntervals",
        type: "uint8[]",
      },
      {
        internalType: "uint256[]",
        name: "_stakeAmounts",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "_tokenAddresses",
        type: "address[]",
      },
    ],
    name: "batchStakeTimePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_saleId",
        type: "uint96",
      },
      {
        internalType: "uint256",
        name: "_ticketAmount",
        type: "uint256",
      },
    ],
    name: "buyTickets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "enum LibTimeManagement.StakeDayInterval",
        name: "_stakeInterval",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "_stakeStartTimeSlot",
        type: "uint32",
      },
      {
        internalType: "uint256",
        name: "_stakeAmount",
        type: "uint256",
      },
    ],
    name: "calculateReward",
    outputs: [
      {
        internalType: "uint256",
        name: "reward_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_saleId",
        type: "uint96",
      },
    ],
    name: "cancelSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakeId",
        type: "uint256",
      },
    ],
    name: "collectReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_startTimeSlot",
        type: "uint32",
      },
    ],
    name: "collectRewardCleanupUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokenAddresses",
        type: "address[]",
      },
      {
        internalType: "uint32[]",
        name: "_startTimeSlots",
        type: "uint32[]",
      },
    ],
    name: "collectRewardCleanupUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "massDXProtocol",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rollingEarningsSumRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint96",
            name: "saleId",
            type: "uint96",
          },
          {
            components: [
              {
                internalType: "address",
                name: "ticketAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "ticketId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ticketAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenAmountPerTicket",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
            ],
            internalType: "struct MassDX.SaleInput",
            name: "sale",
            type: "tuple",
          },
        ],
        internalType: "struct MassDX.TotalSale",
        name: "_ticket",
        type: "tuple",
      },
    ],
    name: "sellTicket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint96",
            name: "saleId",
            type: "uint96",
          },
          {
            components: [
              {
                internalType: "address",
                name: "ticketAddress",
                type: "address",
              },
              {
                internalType: "uint256",
                name: "ticketId",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "ticketAmount",
                type: "uint256",
              },
              {
                internalType: "uint256",
                name: "tokenAmountPerTicket",
                type: "uint256",
              },
              {
                internalType: "address",
                name: "tokenAddress",
                type: "address",
              },
            ],
            internalType: "struct MassDX.SaleInput",
            name: "sale",
            type: "tuple",
          },
        ],
        internalType: "struct MassDX.TotalSale[]",
        name: "_tickets",
        type: "tuple[]",
      },
    ],
    name: "sellTickets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "_timeSlot",
        type: "uint32",
      },
      {
        internalType: "enum LibTimeManagement.StakeDayInterval",
        name: "_stakeDayInterval",
        type: "uint8",
      },
    ],
    name: "stakeSumGetter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakeId",
        type: "uint256",
      },
      {
        internalType: "enum LibTimeManagement.StakeDayInterval",
        name: "_stakeInterval",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "_stakeAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
    ],
    name: "stakeTimePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "",
        type: "uint96",
      },
    ],
    name: "ticketSale",
    outputs: [
      {
        internalType: "address",
        name: "ticketAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "ticketId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ticketAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmountPerTicket",
        type: "uint256",
      },
      {
        internalType: "enum MassDX.SaleStatus",
        name: "status",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "sellerAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "timePoolStakes",
    outputs: [
      {
        internalType: "uint32",
        name: "startTimeSlot",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "enum LibTimeManagement.StakeDayInterval",
        name: "stakeInterval",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "enum ExchangeRewardPool.StakeStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "timeSlotActivationBitMap",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    name: "timeSlotRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSlotSum",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalEarningsPerSum",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405260068054600160a01b600160e81b03191667075300007d00027160a41b17905534801561002f575f5ffd5b50604051612fda380380612fda83398101604081905261004e916100f3565b63ffffffff42166080526001600160a01b03811660a05261006d610093565b600680546001600160a01b0319166001600160a01b039290921691909117905550610120565b5f61009c6100a1565b905090565b5f601436108015906100dc57507f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca97776546001600160a01b031633145b156100ee575060131936013560601c90565b503390565b5f60208284031215610103575f5ffd5b81516001600160a01b0381168114610119575f5ffd5b9392505050565b60805160a051612e846101565f395f818161079401528181610f14015261154d01525f818161201b01526121090152612e845ff3fe608060405234801561000f575f5ffd5b5060043610610111575f3560e01c8063aaf34a941161009e578063c0276c351161006e578063c0276c351461030d578063c622ade314610356578063cad803aa1461035f578063fb312a0114610372578063ff2bf0a614610385575f5ffd5b8063aaf34a94146102c1578063b3994df0146102d4578063b6d7f3cc146102e7578063bd3507da146102fa575f5ffd5b8063745ed460116100e4578063745ed460146101cd57806375c0e462146101e05780637877b6711461024c5780639971047d146102765780639fc6bbee14610289575f5ffd5b806301a35f0d146101155780630f778e4d1461012a5780631c36f61d1461013c5780631f319c851461014f575b5f5ffd5b6101286101233660046123b1565b6103b0565b005b610128610138366004612402565b5050565b61012861014a366004612536565b6108a4565b6101b261015d366004612662565b600260208190525f918252604090912080546001820154919092015463ffffffff83169264010000000081046001600160a01b0390811693600160c01b90920460ff9081169391821691600160a01b90041686565b6040516101c4969594939291906126a1565b60405180910390f35b6101286101db36600461278c565b610936565b6102396101ee3660046127a6565b60076020525f90815260409020805460018201546002830154600384015460048501546005909501546001600160a01b0394851695939492939183169260ff82169161010090041687565b6040516101c497969594939291906127bf565b60065461026290600160b81b900462ffffff1681565b60405162ffffff90911681526020016101c4565b61012861028436600461288b565b610c5f565b6102b3610297366004612402565b600560209081525f928352604080842090915290825290205481565b6040519081526020016101c4565b6101286102cf36600461294e565b610d90565b6102b36102e2366004612991565b611124565b6101286102f53660046127a6565b611188565b610128610308366004612662565b6112dd565b61034161031b366004612402565b600360209081525f92835260408084209091529082529020600181015460029091015482565b604080519283526020830191909152016101c4565b6102b360045481565b6102b361036d3660046129d1565b611631565b610128610380366004612a19565b611738565b600654610398906001600160a01b031681565b6040516001600160a01b0390911681526020016101c4565b6001600160601b0382165f908152600760205260408120600381015460028201548392839283926001600160a01b03909116919087111561045e5760405162461bcd60e51b815260206004820152603d60248201527f556e61626c6520746f207075726368617365206d6f7265207469636b6574732060448201527f7468616e206172652063757272656e746c7920617661696c61626c652e00000060648201526084015b60405180910390fd5b6001600582015460ff16600381111561047957610479612679565b146104c65760405162461bcd60e51b815260206004820152601d60248201527f53616c652069736e277420617661696c61626c6520616e796d6f72652e0000006044820152606401610455565b5f8160040154886104d79190612ac8565b600654909150620f4240906104f890600160a01b900462ffffff1683612ac8565b6105029190612af3565b9450826001600160a01b03166323b872dd61051b61176d565b6006546040516001600160e01b031960e085901b16815261054b92916001600160a01b0316908a90600401612b06565b6020604051808303815f875af1158015610567573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058b9190612b2a565b50600654620f4240906105aa90600160b81b900462ffffff1683612ac8565b6105b49190612af3565b9350826001600160a01b03166323b872dd6105cd61176d565b30876040518463ffffffff1660e01b81526004016105ed93929190612b06565b6020604051808303815f875af1158015610609573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061062d9190612b2a565b50610638838561177b565b836106438683612b49565b61064d9190612b49565b9550826001600160a01b03166323b872dd61066661176d565b600585015460405160e084901b6001600160e01b031916815261069d929161010090046001600160a01b0316908b90600401612b06565b6020604051808303815f875af11580156106b9573d5f5f3e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106dd9190612b2a565b5081546001600160a01b031663f242432a306106f761176d565b85600101548c6040518563ffffffff1660e01b815260040161071c9493929190612b5c565b5f604051808303815f87803b158015610733575f5ffd5b505af1158015610745573d5f5f3e3d5ffd5b50505050600582015460405163731133e960e01b81526101009091046001600160a01b039081166004830152848116602483015260448201839052608060648301525f608483015291975087917f0000000000000000000000000000000000000000000000000000000000000000169063731133e99060a4015f604051808303815f87803b1580156107d5575f5ffd5b505af11580156107e7573d5f5f3e3d5ffd5b505050505f8883600201546107fc9190612b49565b9050805f036108155760058301805460ff191660021790555b88836002015f8282546108289190612b49565b909155507fccfc0a96b3fc44709d8eea8ad420104da02f4c221f9306518bf799243445795990508a8a61085961176d565b604080516001600160601b03909416845260208401929092526001600160a01b03169082015260608101899052608081018a905260a00160405180910390a150505050505050505050565b5f5b8681101561092c576109248888838181106108c3576108c3612b93565b905060200201358783815181106108dc576108dc612b93565b60200260200101518787858181106108f6576108f6612b93565b9050602002013586868681811061090f5761090f612b93565b90506020020160208101906102cf9190612ba7565b6001016108a6565b5050505050505050565b80516001600160601b03165f9081526007602052604081206005015460ff16600381111561096657610966612679565b146109b35760405162461bcd60e51b815260206004820152601e60248201527f4d7573742067656e6572617465206120756e697175652073616c6520696400006044820152606401610455565b5f81602001516040015111610a195760405162461bcd60e51b815260206004820152602660248201527f4d7573742073656c6c2061206e6f6e2d7a65726f20616d6f756e74206f66207460448201526569636b65747360d01b6064820152608401610455565b6020810151516001600160a01b031663f242432a610a3561176d565b308460200151602001518560200151604001516040518563ffffffff1660e01b8152600401610a679493929190612b5c565b5f604051808303815f87803b158015610a7e575f5ffd5b505af1158015610a90573d5f5f3e3d5ffd5b505050506040518060e0016040528082602001515f01516001600160a01b03168152602001826020015160200151815260200182602001516040015181526020018260200151608001516001600160a01b03168152602001826020015160600151815260200160016003811115610b0957610b09612679565b8152602001610b1661176d565b6001600160a01b0390811690915282516001600160601b03165f90815260076020908152604091829020845181549085166001600160a01b0319918216178255918501516001808301919091559285015160028201556060850151600380830180549290961691909316179093556080840151600484015560a08401516005840180549193909260ff19909216918490811115610bb557610bb5612679565b021790555060c0918201516005919091018054610100600160a81b0319166101006001600160a01b03938416021790556040805184516001600160601b0316815260208086015180518516828401529081015182840152918201516060808301919091528201516080808301919091529091015190911660a08201527f45e11bab1aee504353486bcdac5e114af3760e040705486783a001db79f91777910160405180910390a150565b5f546001600160a01b0316610c7261176d565b6001600160a01b031614610ce35760405162461bcd60e51b815260206004820152603260248201527f4d757374207573652074686520636c65616e75704164647265737320746f206160448201527131b1b2b9b9903a3432b9b290333ab732399760711b6064820152608401610455565b8051825114610d495760405162461bcd60e51b815260206004820152602c60248201527f496e70757420706172616d6574657220617267756d656e74206c656e6774687360448201526b1036bab9ba1036b0ba31b41760a11b6064820152608401610455565b5f5b8251811015610d8357610d88838281518110610d6957610d69612b93565b6020026020010151838381518110610d8357610d83612b93565b505050565b600101610d4b565b5f8481526002602052604090205463ffffffff1615610e075760405162461bcd60e51b815260206004820152602d60248201527f412054696d6520506f6f6c207374616b6520616c72656164792065786973747360448201526c081dda5d1a081d1a1a5cc81a59609a1b6064820152608401610455565b306001600160a01b03821603610e5f5760405162461bcd60e51b815260206004820152601e60248201527f52657761726420746f6b656e73206172656e2774207374616b6561626c6500006044820152606401610455565b5f610e6984611923565b90505f610e8063ffffffff42811690849061195c16565b90505f610e8c8661197c565b610e999060ff1686612af3565b6001600160a01b0385165f90815260036020908152604080832063ffffffff871684529091528120919250829190886004811115610ed957610ed9612679565b6004811115610eea57610eea612679565b81526020019081526020015f205f828254610f059190612bc0565b90915550506001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663f5298aca610f4161176d565b6040516001600160e01b031960e084901b1681526001600160a01b0391821660048201529087166024820152604481018890526064015f604051808303815f87803b158015610f8e575f5ffd5b505af1158015610fa0573d5f5f3e3d5ffd5b505050506040518060c001604052808363ffffffff168152602001610fc361176d565b6001600160a01b03168152602001876004811115610fe357610fe3612679565b8152602081018790526001600160a01b03861660408201526060015f90525f8881526002602090815260409182902083518154928501516001600160a01b0316640100000000026001600160c01b031990931663ffffffff9091161791909117808255918301519091829060ff60c01b1916600160c01b83600481111561106c5761106c612679565b0217905550606082015160018083019190915560808301516002830180546001600160a01b039092166001600160a01b031983168117825560a08601519391926001600160a81b0319161790600160a01b9084908111156110cf576110cf612679565b02179055509050507fa163e685e5175da6bd47631e95f99190e5729b9ae285b946dc09132981ab03dd82878761110361176d565b6040516111139493929190612bd3565b60405180910390a150505050505050565b6001600160a01b0383165f90815260036020908152604080832063ffffffff8616845290915281208183600481111561115f5761115f612679565b600481111561117057611170612679565b81526020019081526020015f205490505b9392505050565b6001600160601b0381165f908152600760205260409020600581015461010090046001600160a01b03166111ba61176d565b6001600160a01b03161461121f5760405162461bcd60e51b815260206004820152602660248201527f4d757374206265207468652073656c6c657220746f2063616e63656c20746869604482015265732073616c6560d01b6064820152608401610455565b80546001600160a01b031663f242432a3061123861176d565b846001015485600201546040518563ffffffff1660e01b81526004016112619493929190612b5c565b5f604051808303815f87803b158015611278575f5ffd5b505af115801561128a573d5f5f3e3d5ffd5b5050505060058101805460ff191660031790556040516001600160601b03831681527f45c2365e52b6757a4517a63073cb3e8c9e6bbada83f546b70ccfb515231a60809060200160405180910390a15050565b5f81815260026020819052604082208054918101546001820154919260ff600160c01b820416926001600160a01b039283169263ffffffff8316926401000000009004168661132b86611923565b6113359085612c0d565b90505f6002880154600160a01b900460ff16600181111561135857611358612679565b146113af5760405162461bcd60e51b815260206004820152602160248201527f4d75736e2774206861766520636f6c6c656374656420726577617264732079656044820152601d60fa1b6064820152608401610455565b865464010000000090046001600160a01b03166113ca61176d565b6001600160a01b0316146114205760405162461bcd60e51b815260206004820152601b60248201527f4d75737420626520746865206f726967696e616c207374616b657200000000006044820152606401610455565b4263ffffffff166114305f611923565b61143a9083612c0d565b63ffffffff161061148d5760405162461bcd60e51b815260206004820152601d60248201527f5374616b6520706572696f64206973207374696c6c206f6e676f696e670000006044820152606401610455565b6001600160a01b0385165f90815260036020908152604080832063ffffffff881684529091528120906114c287898888611631565b60028a01805460ff60a01b1916600160a01b1790556040516323b872dd60e01b81529091506001600160a01b038816906323b872dd9061150a90309088908690600401612b06565b6020604051808303815f875af1158015611526573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061154a9190612b2a565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f242432a3061158361176d565b8a6001600160a01b03168e6040518563ffffffff1660e01b81526004016115ad9493929190612b5c565b5f604051808303815f87803b1580156115c4575f5ffd5b505af11580156115d6573d5f5f3e3d5ffd5b505050507fcc024663f9b37b508025f131283368a8776da63f5d9ccca3285754a40453969d61160361176d565b604080516001600160a01b039092168252602082018d90520160405180910390a15050505050505050505050565b5f5f5f5f61164088888861199b565b9250925092506116786040518060400160405280601081526020016f626f6f6c2076616c756520697320257360801b81525084611a33565b8215611689575f9350505050611730565b6001600160a01b0388165f90815260036020908152604080832063ffffffff8087168552925280832060029081015492851684529083200154829190915091506117006040518060400160405280601581526020017466696e616c2072657761726473206172616520257360581b81525082611a78565b670de0b6b3a7640000876117148484612b49565b61171e9190612ac8565b6117289190612af3565b955050505050505b949350505050565b5f5b81518110156101385761176582828151811061175857611758612b93565b6020026020010151610936565b60010161173a565b5f611776611abd565b905090565b5f6117855f611923565b90505f61179c63ffffffff428116908490611b0f16565b90506117d46040518060400160405280600e81526020016d74696d65736c6f7420697320257360901b8152508263ffffffff16611a78565b6001600160a01b0384165f90815260036020908152604080832063ffffffff851684529091528120600181015490918190036118e2575f5f5b600460ff821610156118be575f61182382611b24565b90505f61183a63ffffffff428116908490611b0f16565b90505f61184684611b41565b6001600160a01b038c165f90815260036020908152604080832063ffffffff87168452909152812091925082600481111561188357611883612679565b600481111561189457611894612679565b81526020019081526020015f2054856118ad9190612bc0565b9450506001909201915061180d9050565b506118ca600182612bc0565b6001840181905591508190506118e08785611b5d565b505b6004545f826118f9670de0b6b3a764000089612ac8565b6119039190612af3565b905061190f8183612bc0565b600290940184905550505060045550505050565b5f61192c611c2b565b82600481111561193e5761193e612679565b60ff166005811061195157611951612b93565b602002015192915050565b5f816119688185612c29565b6119729085612c50565b6111819190612c0d565b5f5f61198783611923565b9050611991611c6d565b6111819082612c6c565b5f5f5f6119a9868686611c77565b90506119f06040518060400160405280602081526020017f74686973206973207468652066696e616c2072657761726420736c6f742025738152508263ffffffff16611a78565b8063ffffffff165f03611a0b5750600191505f905080611a2a565b611a158685611fbb565b9150611a268263ffffffff1661218c565b5f92505b93509350939050565b6101388282604051602401611a49929190612cc1565b60408051601f198184030181529190526020810180516001600160e01b031663c3b5563560e01b1790526121d4565b6101388282604051602401611a8e929190612ce4565b60408051601f198184030181529190526020810180516001600160e01b0316632d839cb360e21b1790526121d4565b5f60143610801590611af857507f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca97776546001600160a01b031633145b15611b0a575060131936013560601c90565b503390565b5f611b1a8284612c29565b6111819084612c50565b5f611b2d611c2b565b8260ff166005811061195157611951612b93565b5f8160ff166004811115611b5757611b57612679565b92915050565b5f80611b7363ffffffff8085169083906121dd16565b91509150611bb4604051806040016040528060158152602001744269746d61702074696d65736c6f7420697320257360581b8152508363ffffffff16611a78565b611bc08160ff1661218c565b6001600160a01b0384165f90815260056020908152604080832063ffffffff8616845290915281205490611bf5836002612de8565b6001600160a01b039096165f90815260056020908152604080832063ffffffff9097168352959052939093209417909355505050565b611c33612378565b506040805160a0810182526201518081526203f4806020820152620bdd80918101919091526217bb006060820152622f7600608082015290565b5f6117765f611923565b5f5f5f5f5f5f611cb56040518060400160405280601081526020016f737461727420736c6f7420697320257360801b8152508863ffffffff16611a78565b611cc963ffffffff808916908a9061220116565b9450611d036040518060400160405280601081526020016f66696e616c20736c6f7420697320257360801b8152508663ffffffff16611a78565b611d1763ffffffff808716905f906121dd16565b6001600160a01b038b165f90815260056020908152604080832063ffffffff8616845290915290205491955093509150611d508861197c565b9050611d618463ffffffff1661218c565b611d9760405180604001604052806011815260200170737461727420706f736974696f6e20257360781b8152508460ff16611a78565b5f80611da660ff861684612228565b91509150611db384612257565b5f82611dbf5783611dc9565b611dc98285612df6565b90505f5b8160ff168160ff161015611e6a575f611de68289612df6565b90505f611df4826002612de8565b881614611e6157611e316040518060400160405280601181526020017066696e616c20706f73697469696f20257360781b8152508260ff16611a78565b611e39611c6d565b611e469060ff8316612e0f565b611e50908a612c0d565b9a5050505050505050505050611181565b50600101611dcd565b5060ff8416611e798288612df6565b611e84906001612e35565b60ff1603611e9c575f98505050505050505050611181565b82611f0f5760405162461bcd60e51b815260206004820152603860248201527f4d75737420626520756e646572666c6f77656420746f2072656163682074686960448201527f7320706f696e74202d20437269746963616c204572726f7200000000000000006064820152608401610455565b60ff5f611f2a8e611f2563ffffffff8f1661229c565b6122bb565b5090505f5b8460ff168160ff161015611fa7575f611f488285612df6565b90505f611f56826002612de8565b841614611f9e57611f65611c6d565b611f729060ff8316612e0f565b611f818c63ffffffff1661229c565b611f8b9190612c0d565b9c50505050505050505050505050611181565b50600101611f2f565b505f9e9d5050505050505050505050505050565b5f5f611fc5611c6d565b611fcf9084612c50565b90505f5f611fee611fde611c6d565b63ffffffff808616919061231416565b915091505f611ffd87846122bb565b5090505f61200c8360ff612df6565b60ff1682901b905080612094577f000000000000000000000000000000000000000000000000000000000000000063ffffffff168463ffffffff16101561205a575f95505050505050611b57565b5f612063611c6d565b61206e856001612e35565b60ff1661207b9190612e0f565b6120859087612c50565b90506120918982611fbb565b50505b5f5b8360ff168160ff161015612106575f6120af8286612df6565b90505f60016120bf836002612de8565b6120c99190612b49565b8516146120fd576120d8611c6d565b6120e59060ff8316612e0f565b6120ef9087612c0d565b975050505050505050611b57565b50600101612096565b507f000000000000000000000000000000000000000000000000000000000000000063ffffffff168463ffffffff161015612148575f95505050505050611b57565b5f612151611c6d565b61215c856001612e35565b60ff166121699190612e0f565b6121739089612c50565b905061217f8982611fbb565b5050505050505092915050565b6121d1816040516024016121a291815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b1790526121d4565b50565b6121d181612359565b5f5f5f6121e984611923565b90506121f58582612314565b90969095509350505050565b5f61220b5f611923565b61221483611923565b61221e9085612c0d565b6111819190612c50565b5f8082840360ff808616908216111561224a5760019250610100039050612250565b5f925090505b9250929050565b6121d18160405160240161226d91815260200190565b60408051601f198184030181529190526020810180516001600160e01b03166327b7cf8560e01b1790526121d4565b5f60ff6122a7611c6d565b6122b19190612e0f565b611b579083612c50565b5f5f5f6122c75f611923565b90505f806122df63ffffffff80881690859061231416565b506001600160a01b039097165f908152600560209081526040822063ffffffff90991690915296909652509194909350915050565b5f808061232260ff85612e0f565b90508361232f8287612c29565b6123399190612c6c565b91506123458186612c29565b61234f9086612c50565b9250509250929050565b5f6a636f6e736f6c652e6c6f6790505f5f835160208501845afa505050565b6040518060a001604052806005906020820280368337509192915050565b80356001600160601b03811681146123ac575f5ffd5b919050565b5f5f604083850312156123c2575f5ffd5b6123cb83612396565b946020939093013593505050565b80356001600160a01b03811681146123ac575f5ffd5b803563ffffffff811681146123ac575f5ffd5b5f5f60408385031215612413575f5ffd5b61241c836123d9565b915061242a602084016123ef565b90509250929050565b5f5f83601f840112612443575f5ffd5b50813567ffffffffffffffff81111561245a575f5ffd5b6020830191508360208260051b8501011115612250575f5ffd5b634e487b7160e01b5f52604160045260245ffd5b6040805190810167ffffffffffffffff811182821017156124ab576124ab612474565b60405290565b60405160a0810167ffffffffffffffff811182821017156124ab576124ab612474565b604051601f8201601f1916810167ffffffffffffffff811182821017156124fd576124fd612474565b604052919050565b5f67ffffffffffffffff82111561251e5761251e612474565b5060051b60200190565b8035600581106123ac575f5ffd5b5f5f5f5f5f5f5f6080888a03121561254c575f5ffd5b873567ffffffffffffffff811115612562575f5ffd5b61256e8a828b01612433565b909850965050602088013567ffffffffffffffff81111561258d575f5ffd5b8801601f81018a1361259d575f5ffd5b80356125b06125ab82612505565b6124d4565b8082825260208201915060208360051b85010192508c8311156125d1575f5ffd5b6020840193505b828410156125fa576125e984612528565b8252602093840193909101906125d8565b9750505050604088013567ffffffffffffffff811115612618575f5ffd5b6126248a828b01612433565b909550935050606088013567ffffffffffffffff811115612643575f5ffd5b61264f8a828b01612433565b989b979a50959850939692959293505050565b5f60208284031215612672575f5ffd5b5035919050565b634e487b7160e01b5f52602160045260245ffd5b6005811061269d5761269d612679565b9052565b63ffffffff871681526001600160a01b038616602082015260c081016126ca604083018761268d565b606082018590526001600160a01b0384166080830152600283106126f0576126f0612679565b8260a0830152979650505050505050565b5f81830360c0811215612712575f5ffd5b61271a612488565b915061272583612396565b825260a0601f1982011215612738575f5ffd5b506127416124b1565b61274d602084016123d9565b815260408381013560208301526060808501359183019190915260808401359082015261277c60a084016123d9565b6080820152602082015292915050565b5f60c0828403121561279c575f5ffd5b6111818383612701565b5f602082840312156127b6575f5ffd5b61118182612396565b6001600160a01b0388811682526020820188905260408201879052851660608201526080810184905260e08101600484106127fc576127fc612679565b60a08201939093526001600160a01b039190911660c09091015295945050505050565b5f82601f83011261282e575f5ffd5b813561283c6125ab82612505565b8082825260208201915060208360051b86010192508583111561285d575f5ffd5b602085015b8381101561288157612873816123ef565b835260209283019201612862565b5095945050505050565b5f5f6040838503121561289c575f5ffd5b823567ffffffffffffffff8111156128b2575f5ffd5b8301601f810185136128c2575f5ffd5b80356128d06125ab82612505565b8082825260208201915060208360051b8501019250878311156128f1575f5ffd5b6020840193505b8284101561291a57612909846123d9565b8252602093840193909101906128f8565b9450505050602083013567ffffffffffffffff811115612938575f5ffd5b6129448582860161281f565b9150509250929050565b5f5f5f5f60808587031215612961575f5ffd5b8435935061297160208601612528565b925060408501359150612986606086016123d9565b905092959194509250565b5f5f5f606084860312156129a3575f5ffd5b6129ac846123d9565b92506129ba602085016123ef565b91506129c860408501612528565b90509250925092565b5f5f5f5f608085870312156129e4575f5ffd5b6129ed856123d9565b93506129fb60208601612528565b9250612a09604086016123ef565b9396929550929360600135925050565b5f60208284031215612a29575f5ffd5b813567ffffffffffffffff811115612a3f575f5ffd5b8201601f81018413612a4f575f5ffd5b8035612a5d6125ab82612505565b80828252602082019150602060c08402850101925086831115612a7e575f5ffd5b6020840193505b82841015612aaa57612a978785612701565b825260208201915060c084019350612a85565b9695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8082028115828204841417611b5757611b57612ab4565b634e487b7160e01b5f52601260045260245ffd5b5f82612b0157612b01612adf565b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215612b3a575f5ffd5b81518015158114611181575f5ffd5b81810381811115611b5757611b57612ab4565b6001600160a01b0394851681529290931660208301526040820152606081019190915260a0608082018190525f9082015260c00190565b634e487b7160e01b5f52603260045260245ffd5b5f60208284031215612bb7575f5ffd5b611181826123d9565b80820180821115611b5757611b57612ab4565b63ffffffff8516815260808101612bed602083018661268d565b60408201939093526001600160a01b039190911660609091015292915050565b63ffffffff8181168382160190811115611b5757611b57612ab4565b5f63ffffffff831680612c3e57612c3e612adf565b8063ffffffff84160691505092915050565b63ffffffff8281168282160390811115611b5757611b57612ab4565b5f63ffffffff831680612c8157612c81612adf565b8063ffffffff84160491505092915050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b604081525f612cd36040830185612c93565b905082151560208301529392505050565b604081525f612cf66040830185612c93565b90508260208301529392505050565b6001815b6001841115612d4057808504811115612d2457612d24612ab4565b6001841615612d3257908102905b60019390931c928002612d09565b935093915050565b5f82612d5657506001611b57565b81612d6257505f611b57565b8160018114612d785760028114612d8257612d9e565b6001915050611b57565b60ff841115612d9357612d93612ab4565b50506001821b611b57565b5060208310610133831016604e8410600b8410161715612dc1575081810a611b57565b612dcd5f198484612d05565b805f1904821115612de057612de0612ab4565b029392505050565b5f61118160ff841683612d48565b60ff8281168282160390811115611b5757611b57612ab4565b63ffffffff8181168382160290811690818114612e2e57612e2e612ab4565b5092915050565b60ff8181168382160190811115611b5757611b57612ab456fea2646970667358221220b0b007f5c9f79013b18afa5afd5606d4fc5742a7db2ef8d3d4052976f6273eb364736f6c634300081c0033";

type MassDXConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MassDXConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MassDX__factory extends ContractFactory {
  constructor(...args: MassDXConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _exchangeRewardERC1155: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MassDX> {
    return super.deploy(
      _exchangeRewardERC1155,
      overrides || {}
    ) as Promise<MassDX>;
  }
  override getDeployTransaction(
    _exchangeRewardERC1155: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_exchangeRewardERC1155, overrides || {});
  }
  override attach(address: string): MassDX {
    return super.attach(address) as MassDX;
  }
  override connect(signer: Signer): MassDX__factory {
    return super.connect(signer) as MassDX__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MassDXInterface {
    return new utils.Interface(_abi) as MassDXInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MassDX {
    return new Contract(address, _abi, signerOrProvider) as MassDX;
  }
}
