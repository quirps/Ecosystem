/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC1155Rewards,
  ERC1155RewardsInterface,
} from "../../exchange/ERC1155Rewards";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506103698061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c806301ffc9a714610043578063bc197c811461006b578063f23a6e61146100a6575b5f5ffd5b610056610051366004610132565b6100c6565b60405190151581526020015b60405180910390f35b61008d610079366004610201565b5063bc197c8160e01b979650505050505050565b6040516001600160e01b03199091168152602001610062565b61008d6100b43660046102c0565b5063f23a6e6160e01b95945050505050565b5f6001600160e01b0319821663f23a6e6160e01b14806100f657506001600160e01b0319821663bc197c8160e01b145b8061011157506001600160e01b0319821663bc8804f760e01b145b8061012c57506001600160e01b031982166303a24d0760e21b145b92915050565b5f60208284031215610142575f5ffd5b81356001600160e01b031981168114610159575f5ffd5b9392505050565b80356001600160a01b0381168114610176575f5ffd5b919050565b5f5f83601f84011261018b575f5ffd5b50813567ffffffffffffffff8111156101a2575f5ffd5b6020830191508360208260051b85010111156101bc575f5ffd5b9250929050565b5f5f83601f8401126101d3575f5ffd5b50813567ffffffffffffffff8111156101ea575f5ffd5b6020830191508360208285010111156101bc575f5ffd5b5f5f5f5f5f5f5f5f60a0898b031215610218575f5ffd5b61022189610160565b975061022f60208a01610160565b9650604089013567ffffffffffffffff81111561024a575f5ffd5b6102568b828c0161017b565b909750955050606089013567ffffffffffffffff811115610275575f5ffd5b6102818b828c0161017b565b909550935050608089013567ffffffffffffffff8111156102a0575f5ffd5b6102ac8b828c016101c3565b999c989b5096995094979396929594505050565b5f5f5f5f5f5f60a087890312156102d5575f5ffd5b6102de87610160565b95506102ec60208801610160565b94506040870135935060608701359250608087013567ffffffffffffffff811115610315575f5ffd5b61032189828a016101c3565b979a969950949750929593949250505056fea2646970667358221220d9e780553a9db720402feed8ac74a4a76cef814d41b537ddb5d6256be0ebed2164736f6c634300081c0033";

type ERC1155RewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155RewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Rewards__factory extends ContractFactory {
  constructor(...args: ERC1155RewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Rewards> {
    return super.deploy(overrides || {}) as Promise<ERC1155Rewards>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Rewards {
    return super.attach(address) as ERC1155Rewards;
  }
  override connect(signer: Signer): ERC1155Rewards__factory {
    return super.connect(signer) as ERC1155Rewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155RewardsInterface {
    return new utils.Interface(_abi) as ERC1155RewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Rewards {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Rewards;
  }
}
