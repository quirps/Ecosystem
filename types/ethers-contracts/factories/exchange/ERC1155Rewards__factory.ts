/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC1155Rewards,
  ERC1155RewardsInterface,
} from "../../exchange/ERC1155Rewards";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061067c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806301ffc9a714610046578063bc197c8114610076578063f23a6e61146100a6575b600080fd5b610060600480360381019061005b91906102f4565b6100d6565b60405161006d919061033c565b60405180910390f35b610090600480360381019061008b9190610470565b610246565b60405161009d919061055b565b60405180910390f35b6100c060048036038101906100bb91906105ac565b61025e565b6040516100cd919061055b565b60405180910390f35b600063f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061016f575063bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806101d757507fbc8804f7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061023f57507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6000610250610274565b905098975050505050505050565b6000610268610283565b90509695505050505050565b600063bc197c8160e01b905090565b600063f23a6e6160e01b905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6102d18161029c565b81146102dc57600080fd5b50565b6000813590506102ee816102c8565b92915050565b60006020828403121561030a57610309610292565b5b6000610318848285016102df565b91505092915050565b60008115159050919050565b61033681610321565b82525050565b6000602082019050610351600083018461032d565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061038282610357565b9050919050565b61039281610377565b811461039d57600080fd5b50565b6000813590506103af81610389565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126103da576103d96103b5565b5b8235905067ffffffffffffffff8111156103f7576103f66103ba565b5b602083019150836020820283011115610413576104126103bf565b5b9250929050565b60008083601f8401126104305761042f6103b5565b5b8235905067ffffffffffffffff81111561044d5761044c6103ba565b5b602083019150836001820283011115610469576104686103bf565b5b9250929050565b60008060008060008060008060a0898b0312156104905761048f610292565b5b600061049e8b828c016103a0565b98505060206104af8b828c016103a0565b975050604089013567ffffffffffffffff8111156104d0576104cf610297565b5b6104dc8b828c016103c4565b9650965050606089013567ffffffffffffffff8111156104ff576104fe610297565b5b61050b8b828c016103c4565b9450945050608089013567ffffffffffffffff81111561052e5761052d610297565b5b61053a8b828c0161041a565b92509250509295985092959890939650565b6105558161029c565b82525050565b6000602082019050610570600083018461054c565b92915050565b6000819050919050565b61058981610576565b811461059457600080fd5b50565b6000813590506105a681610580565b92915050565b60008060008060008060a087890312156105c9576105c8610292565b5b60006105d789828a016103a0565b96505060206105e889828a016103a0565b95505060406105f989828a01610597565b945050606061060a89828a01610597565b935050608087013567ffffffffffffffff81111561062b5761062a610297565b5b61063789828a0161041a565b9250925050929550929550929556fea2646970667358221220a5b37ffd7b7b2cf42c6fa8623adbb1a2cb2511f600ae278baf41d8663059279164736f6c63430008090033";

type ERC1155RewardsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155RewardsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Rewards__factory extends ContractFactory {
  constructor(...args: ERC1155RewardsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Rewards> {
    return super.deploy(overrides || {}) as Promise<ERC1155Rewards>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Rewards {
    return super.attach(address) as ERC1155Rewards;
  }
  override connect(signer: Signer): ERC1155Rewards__factory {
    return super.connect(signer) as ERC1155Rewards__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155RewardsInterface {
    return new utils.Interface(_abi) as ERC1155RewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Rewards {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Rewards;
  }
}
