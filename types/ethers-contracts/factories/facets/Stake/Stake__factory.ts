/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Stake, StakeInterface } from "../../../facets/Stake/Stake";

const _abi = [
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum iMembers.BountyAccountChange",
        name: "direction",
        type: "uint8",
      },
    ],
    name: "BountyBalanceChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountyUp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountyUpRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountiesDown",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountyDownRate",
        type: "uint256",
      },
    ],
    name: "BountyEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "initialRate",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rateIncrease",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rateIncreaseStopDuration",
            type: "uint16",
          },
        ],
        indexed: false,
        internalType: "struct Stake.RewardRate[]",
        name: "_rewardRates",
        type: "tuple[]",
      },
    ],
    name: "RewardRatesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "RewardsRetrieved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "funder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "StakeRewardAccountFunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "user",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "amount",
        type: "uint256[]",
      },
      {
        internalType: "enum Stake.StakeTier[]",
        name: "tier",
        type: "uint8[]",
      },
      {
        internalType: "uint256[]",
        name: "stakeIds",
        type: "uint256[]",
      },
    ],
    name: "batchStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bountyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currencyId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "downRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "fundStakeAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum Stake.StakeTier[]",
        name: "_stakeTier",
        type: "uint8[]",
      },
      {
        components: [
          {
            internalType: "uint16",
            name: "initialRate",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rateIncrease",
            type: "uint16",
          },
          {
            internalType: "uint16",
            name: "rateIncreaseStopDuration",
            type: "uint16",
          },
        ],
        internalType: "struct Stake.RewardRate[]",
        name: "_rewardRate",
        type: "tuple[]",
      },
    ],
    name: "setRewardRates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum Stake.StakeTier",
        name: "tier",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "staker",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "enum Stake.StakeTier",
        name: "tier",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "stakeContract",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "viewMinimumStakeDurationLeft",
    outputs: [
      {
        internalType: "uint32",
        name: "timeLeft_",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeId",
        type: "uint256",
      },
    ],
    name: "viewReward",
    outputs: [
      {
        internalType: "uint256",
        name: "reward_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061320e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063b81e3c891161008c578063c516358f11610066578063c516358f146101fe578063e9ff9b9d1461021c578063f02883c91461023a578063f99b7d7514610256576100cf565b8063b81e3c8914610196578063becf89a1146101b2578063c2552604146101ce576100cf565b80631feeece2146100d457806363962f40146100f2578063677902f41461011057806373ad468a1461012c5780639a7614f11461014a5780639e2c8a5b1461017a575b600080fd5b6100dc610272565b6040516100e99190611c0a565b60405180910390f35b6100fa610277565b6040516101079190611c0a565b60405180910390f35b61012a60048036038101906101259190611ce8565b61027d565b005b61013461055e565b6040516101419190611c0a565b60405180910390f35b610164600480360381019061015f9190611d4f565b610564565b6040516101719190611d9b565b60405180910390f35b610194600480360381019061018f9190611db6565b610630565b005b6101b060048036038101906101ab91906120d5565b61084a565b005b6101cc60048036038101906101c79190612312565b6108d5565b005b6101e860048036038101906101e39190611d4f565b610ad5565b6040516101f59190611c0a565b60405180910390f35b610206610b7f565b6040516102139190612399565b60405180910390f35b610224610ba3565b6040516102319190611c0a565b60405180910390f35b610254600480360381019061024f9190611d4f565b610ba9565b005b610270600480360381019061026b91906123b4565b610c24565b005b600081565b60025481565b6102ae84732d08bdf3c61834f76decaf6e85ffaecfef02e60560008660405180602001604052806000815250610f12565b6000600460006102bc6111a8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461039c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103939061248a565b60405180910390fd5b6040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020016103cb6111a8565b73ffffffffffffffffffffffffffffffffffffffff1681526020018460038111156103f9576103f86124aa565b5b81526020018581526020014263ffffffff168152506004600061041a6111a8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083600381111561051e5761051d6124aa565b5b02179055506060820151816002015560808201518160030160006101000a81548163ffffffff021916908363ffffffff1602179055509050505050505050565b60015481565b600080600460006105736111a8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020905060008160030160009054906101000a900463ffffffff16905060006105f58360010160149054906101000a900460ff166111b7565b905080826106039190612508565b63ffffffff1642111561062357814261061c9190612542565b9350610628565b600093505b505050919050565b60006004600061063e6111a8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020905060008160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008483600201546106c69190612576565b905060008360030160009054906101000a900463ffffffff16426106ea9190612542565b90506107068460010160149054906101000a900460ff166111b7565b63ffffffff168163ffffffff161015610754576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074b9061261c565b60405180910390fd5b818460020181905550600061078f878660010160149054906101000a900460ff168760030160009054906101000a900463ffffffff1661129a565b90506000878261079f919061263c565b90506107d2732d08bdf3c61834f76decaf6e85ffaecfef02e6058660008560405180602001604052806000815250610f12565b610803732d08bdf3c61834f76decaf6e85ffaecfef02e6058660008b60405180602001604052806000815250610f12565b7f1b4835b6652e6ff440df539e52011c511ae737f525419fe13dbfb69557e0449f8589848a6040516108389493929190612692565b60405180910390a15050505050505050565b60005b6001855161085b9190612576565b8110156108ce576108bb848281518110610878576108776126d7565b5b6020026020010151848381518110610893576108926126d7565b5b60200260200101518484815181106108ae576108ad6126d7565b5b6020026020010151610c24565b80806108c690612706565b91505061084d565b5050505050565b6108dd611633565b8051825114610921576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610918906127c1565b60405180910390fd5b60005b600182516109329190612576565b8160ff161015610a9957818160ff1681518110610952576109516126d7565b5b60200260200101516040015161ffff1661ffff801610156109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161099f90612853565b60405180910390fd5b818160ff16815181106109be576109bd6126d7565b5b602002602001015160056000858460ff16815181106109e0576109df6126d7565b5b602002602001015160038111156109fa576109f96124aa565b5b6003811115610a0c57610a0b6124aa565b5b815260200190815260200160002060008201518160000160006101000a81548161ffff021916908361ffff16021790555060208201518160000160026101000a81548161ffff021916908361ffff16021790555060408201518160000160046101000a81548161ffff021916908361ffff1602179055509050508080610a9190612880565b915050610924565b507f502e2557babc41671f9b2f46ef02dbc49733f00beb6e6ccc5d52ca5bf89737cc81604051610ac991906129aa565b60405180910390a15050565b60008060046000610ae46111a8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000848152602001908152602001600020905060008160020154905060008260010160149054906101000a900460ff16905060008360030160009054906101000a900463ffffffff169050610b7483838361129a565b945050505050919050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b610be1610bb46111a8565b732d08bdf3c61834f76decaf6e85ffaecfef02e60560008460405180602001604052806000815250610f12565b7f63942f00aa3067c74d1ae2965839be9e4a7d64c045dea45ca8e7f2a59c4e4b86610c0a6111a8565b82604051610c199291906129cc565b60405180910390a150565b610c5c610c2f6111a8565b732d08bdf3c61834f76decaf6e85ffaecfef02e60560008660405180602001604052806000815250610f12565b600060046000610c6a6111a8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008381526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610d4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d419061248a565b60405180910390fd5b6040518060a00160405280610d5d6111a8565b73ffffffffffffffffffffffffffffffffffffffff168152602001610d806111a8565b73ffffffffffffffffffffffffffffffffffffffff168152602001846003811115610dae57610dad6124aa565b5b81526020018581526020014263ffffffff1681525060046000610dcf6111a8565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836003811115610ed357610ed26124aa565b5b02179055506060820151816002015560808201518160030160006101000a81548163ffffffff021916908363ffffffff16021790555090505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610f82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7990612a67565b60405180910390fd5b6000610f8c6116b1565b90506000610f986111a8565b90506000610fa5866116de565b90506000610fb2866116de565b9050600084600001600089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508681101561104e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104590612af9565b60405180910390fd5b8681038560000160008a815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550868560000160008a815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611109919061263c565b925050819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628b8b604051611186929190612b19565b60405180910390a461119c848b8b8b8b8b611758565b50505050505050505050565b60006111b2611979565b905090565b6000600160038111156111cd576111cc6124aa565b5b8260038111156111e0576111df6124aa565b5b14156111f15762093a809050611295565b60026003811115611205576112046124aa565b5b826003811115611218576112176124aa565b5b141561122957621275009050611294565b60038081111561123c5761123b6124aa565b5b82600381111561124f5761124e6124aa565b5b1415611260576224ea009050611293565b60006003811115611274576112736124aa565b5b826003811115611287576112866124aa565b5b141561129257600090505b5b5b5b919050565b60008082426112a99190612542565b9050600060038111156112bf576112be6124aa565b5b8460038111156112d2576112d16124aa565b5b141561138b576113848582600560008060038111156112f4576112f36124aa565b5b6003811115611306576113056124aa565b5b81526020019081526020016000206040518060600160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff16815250506119b0565b915061162b565b6001600381111561139f5761139e6124aa565b5b8460038111156113b2576113b16124aa565b5b141561146c57611465858260056000600160038111156113d5576113d46124aa565b5b60038111156113e7576113e66124aa565b5b81526020019081526020016000206040518060600160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff16815250506119b0565b915061162a565b600260038111156114805761147f6124aa565b5b846003811115611493576114926124aa565b5b141561154d57611546858260056000600260038111156114b6576114b56124aa565b5b60038111156114c8576114c76124aa565b5b81526020019081526020016000206040518060600160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff16815250506119b0565b9150611629565b6003808111156115605761155f6124aa565b5b846003811115611573576115726124aa565b5b141561162857611625858260056000600380811115611595576115946124aa565b5b60038111156115a7576115a66124aa565b5b81526020019081526020016000206040518060600160405290816000820160009054906101000a900461ffff1661ffff1661ffff1681526020016000820160029054906101000a900461ffff1661ffff1661ffff1681526020016000820160049054906101000a900461ffff1661ffff1661ffff16815250506119b0565b91505b5b5b5b509392505050565b61163b611a5e565b73ffffffffffffffffffffffffffffffffffffffff166116596111a8565b73ffffffffffffffffffffffffffffffffffffffff16146116af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116a690612b8e565b60405180910390fd5b565b6000807f6469616d6f6e642e73746f726167652e6572633131353500000000000000000090508091505090565b60606000600167ffffffffffffffff8111156116fd576116fc611e0c565b5b60405190808252806020026020018201604052801561172b5781602001602082028036833780820191505090505b5090508281600081518110611743576117426126d7565b5b60200260200101818152505080915050919050565b6117778473ffffffffffffffffffffffffffffffffffffffff16611a6d565b15611970573073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156117b557611971565b8373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016117f6959493929190612c36565b602060405180830381600087803b15801561181057600080fd5b505af192505050801561184157506040513d601f19601f8201168201806040525081019061183e9190612ce8565b60015b6118e75761184d612d22565b806308c379a014156118aa5750611862612d44565b8061186d57506118ac565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a19190612e1e565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118de90612eb2565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461196e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161196590612f44565b60405180910390fd5b505b5b505050505050565b60006014600036905010158015611995575061199433611a80565b5b156119a957601436033560601c90506119ad565b3390505b90565b6000816040015161ffff168363ffffffff1610611a3e576119da8483846040015161ffff16611ae8565b816119e5919061263c565b90506000826040015161ffff16846119fd9190612542565b9050611a16836000015184602001518560400151611b42565b61ffff1681611a259190612f64565b63ffffffff1682611a36919061263c565b915050611a57565b611a49848385611ae8565b81611a54919061263c565b90505b9392505050565b6000611a68611b64565b905090565b600080823b905060008111915050919050565b600080611a8b611b97565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614915050919050565b600081836000015161ffff16611afe9190612f64565b60028084611b0c91906130d5565b856020015161ffff16611b1f9190612f64565b611b299190613133565b611b339190612508565b63ffffffff1690509392505050565b60008183611b509190613164565b84611b5b91906131a0565b90509392505050565b6000611b6e611bc4565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000807f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca9777690508091505090565b6000807fd00049dc7109015045860694acecd3dc33338404aaf6e55a1c98a2bf41477b8590508091505090565b6000819050919050565b611c0481611bf1565b82525050565b6000602082019050611c1f6000830184611bfb565b92915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c6482611c39565b9050919050565b611c7481611c59565b8114611c7f57600080fd5b50565b600081359050611c9181611c6b565b92915050565b611ca081611bf1565b8114611cab57600080fd5b50565b600081359050611cbd81611c97565b92915050565b60048110611cd057600080fd5b50565b600081359050611ce281611cc3565b92915050565b60008060008060808587031215611d0257611d01611c2f565b5b6000611d1087828801611c82565b9450506020611d2187828801611cae565b9350506040611d3287828801611cd3565b9250506060611d4387828801611cae565b91505092959194509250565b600060208284031215611d6557611d64611c2f565b5b6000611d7384828501611cae565b91505092915050565b600063ffffffff82169050919050565b611d9581611d7c565b82525050565b6000602082019050611db06000830184611d8c565b92915050565b60008060408385031215611dcd57611dcc611c2f565b5b6000611ddb85828601611cae565b9250506020611dec85828601611cae565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611e4482611dfb565b810181811067ffffffffffffffff82111715611e6357611e62611e0c565b5b80604052505050565b6000611e76611c25565b9050611e828282611e3b565b919050565b600067ffffffffffffffff821115611ea257611ea1611e0c565b5b602082029050602081019050919050565b600080fd5b6000611ecb611ec684611e87565b611e6c565b90508083825260208201905060208402830185811115611eee57611eed611eb3565b5b835b81811015611f175780611f038882611c82565b845260208401935050602081019050611ef0565b5050509392505050565b600082601f830112611f3657611f35611df6565b5b8135611f46848260208601611eb8565b91505092915050565b600067ffffffffffffffff821115611f6a57611f69611e0c565b5b602082029050602081019050919050565b6000611f8e611f8984611f4f565b611e6c565b90508083825260208201905060208402830185811115611fb157611fb0611eb3565b5b835b81811015611fda5780611fc68882611cae565b845260208401935050602081019050611fb3565b5050509392505050565b600082601f830112611ff957611ff8611df6565b5b8135612009848260208601611f7b565b91505092915050565b600067ffffffffffffffff82111561202d5761202c611e0c565b5b602082029050602081019050919050565b600061205161204c84612012565b611e6c565b9050808382526020820190506020840283018581111561207457612073611eb3565b5b835b8181101561209d57806120898882611cd3565b845260208401935050602081019050612076565b5050509392505050565b600082601f8301126120bc576120bb611df6565b5b81356120cc84826020860161203e565b91505092915050565b600080600080608085870312156120ef576120ee611c2f565b5b600085013567ffffffffffffffff81111561210d5761210c611c34565b5b61211987828801611f21565b945050602085013567ffffffffffffffff81111561213a57612139611c34565b5b61214687828801611fe4565b935050604085013567ffffffffffffffff81111561216757612166611c34565b5b612173878288016120a7565b925050606085013567ffffffffffffffff81111561219457612193611c34565b5b6121a087828801611fe4565b91505092959194509250565b600067ffffffffffffffff8211156121c7576121c6611e0c565b5b602082029050602081019050919050565b600080fd5b600061ffff82169050919050565b6121f4816121dd565b81146121ff57600080fd5b50565b600081359050612211816121eb565b92915050565b60006060828403121561222d5761222c6121d8565b5b6122376060611e6c565b9050600061224784828501612202565b600083015250602061225b84828501612202565b602083015250604061226f84828501612202565b60408301525092915050565b600061228e612289846121ac565b611e6c565b905080838252602082019050606084028301858111156122b1576122b0611eb3565b5b835b818110156122da57806122c68882612217565b8452602084019350506060810190506122b3565b5050509392505050565b600082601f8301126122f9576122f8611df6565b5b813561230984826020860161227b565b91505092915050565b6000806040838503121561232957612328611c2f565b5b600083013567ffffffffffffffff81111561234757612346611c34565b5b612353858286016120a7565b925050602083013567ffffffffffffffff81111561237457612373611c34565b5b612380858286016122e4565b9150509250929050565b61239381611c59565b82525050565b60006020820190506123ae600083018461238a565b92915050565b6000806000606084860312156123cd576123cc611c2f565b5b60006123db86828701611cae565b93505060206123ec86828701611cd3565b92505060406123fd86828701611cae565b9150509250925092565b600082825260208201905092915050565b7f5374616b65496420616c7265616479206578697374732c20706c65617365206360008201527f7265617465206120756e69717565207374616b65496400000000000000000000602082015250565b6000612474603683612407565b915061247f82612418565b604082019050919050565b600060208201905081810360008301526124a381612467565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061251382611d7c565b915061251e83611d7c565b92508263ffffffff03821115612537576125366124d9565b5b828201905092915050565b600061254d82611d7c565b915061255883611d7c565b92508282101561256b5761256a6124d9565b5b828203905092915050565b600061258182611bf1565b915061258c83611bf1565b92508282101561259f5761259e6124d9565b5b828203905092915050565b7f43616e277420756e7374616b65207265776172647320756e74696c207468652060008201527f6d696e696e6d756d206475726174696f6e20686173207061737365642e000000602082015250565b6000612606603d83612407565b9150612611826125aa565b604082019050919050565b60006020820190508181036000830152612635816125f9565b9050919050565b600061264782611bf1565b915061265283611bf1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612687576126866124d9565b5b828201905092915050565b60006080820190506126a7600083018761238a565b6126b46020830186611bfb565b6126c16040830185611bfb565b6126ce6060830184611bfb565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061271182611bf1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612744576127436124d9565b5b600182019050919050565b7f496e70757420706172616d6574657273206d75737420686176652073616d652060008201527f6c656e6774680000000000000000000000000000000000000000000000000000602082015250565b60006127ab602683612407565b91506127b68261274f565b604082019050919050565b600060208201905081810360008301526127da8161279e565b9050919050565b7f52617465496e63726561736553746f704475726174696f6e206d75737420626560008201527f20612075696e74313620747970652e0000000000000000000000000000000000602082015250565b600061283d602f83612407565b9150612848826127e1565b604082019050919050565b6000602082019050818103600083015261286c81612830565b9050919050565b600060ff82169050919050565b600061288b82612873565b915060ff82141561289f5761289e6124d9565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6128df816121dd565b82525050565b6060820160008201516128fb60008501826128d6565b50602082015161290e60208501826128d6565b50604082015161292160408501826128d6565b50505050565b600061293383836128e5565b60608301905092915050565b6000602082019050919050565b6000612957826128aa565b61296181856128b5565b935061296c836128c6565b8060005b8381101561299d5781516129848882612927565b975061298f8361293f565b925050600181019050612970565b5085935050505092915050565b600060208201905081810360008301526129c4818461294c565b905092915050565b60006040820190506129e1600083018561238a565b6129ee6020830184611bfb565b9392505050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000612a51602583612407565b9150612a5c826129f5565b604082019050919050565b60006020820190508181036000830152612a8081612a44565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b6000612ae3602a83612407565b9150612aee82612a87565b604082019050919050565b60006020820190508181036000830152612b1281612ad6565b9050919050565b6000604082019050612b2e6000830185611bfb565b612b3b6020830184611bfb565b9392505050565b7f4d757374206265207468652045636f73797374656d206f776e65720000000000600082015250565b6000612b78601b83612407565b9150612b8382612b42565b602082019050919050565b60006020820190508181036000830152612ba781612b6b565b9050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612be8578082015181840152602081019050612bcd565b83811115612bf7576000848401525b50505050565b6000612c0882612bae565b612c128185612bb9565b9350612c22818560208601612bca565b612c2b81611dfb565b840191505092915050565b600060a082019050612c4b600083018861238a565b612c58602083018761238a565b612c656040830186611bfb565b612c726060830185611bfb565b8181036080830152612c848184612bfd565b90509695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b612cc581612c90565b8114612cd057600080fd5b50565b600081519050612ce281612cbc565b92915050565b600060208284031215612cfe57612cfd611c2f565b5b6000612d0c84828501612cd3565b91505092915050565b60008160e01c9050919050565b600060033d1115612d415760046000803e612d3e600051612d15565b90505b90565b600060443d1015612d5457612dd7565b612d5c611c25565b60043d036004823e80513d602482011167ffffffffffffffff82111715612d84575050612dd7565b808201805167ffffffffffffffff811115612da25750505050612dd7565b80602083010160043d038501811115612dbf575050505050612dd7565b612dce82602001850186611e3b565b82955050505050505b90565b600081519050919050565b6000612df082612dda565b612dfa8185612407565b9350612e0a818560208601612bca565b612e1381611dfb565b840191505092915050565b60006020820190508181036000830152612e388184612de5565b905092915050565b7f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b6000612e9c603483612407565b9150612ea782612e40565b604082019050919050565b60006020820190508181036000830152612ecb81612e8f565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b6000612f2e602883612407565b9150612f3982612ed2565b604082019050919050565b60006020820190508181036000830152612f5d81612f21565b9050919050565b6000612f6f82611d7c565b9150612f7a83611d7c565b92508163ffffffff0483118215151615612f9757612f966124d9565b5b828202905092915050565b60008160011c9050919050565b6000808291508390505b6001851115612ff957808604811115612fd557612fd46124d9565b5b6001851615612fe45780820291505b8081029050612ff285612fa2565b9450612fb9565b94509492505050565b60008261301257600190506130ce565b8161302057600090506130ce565b816001811461303657600281146130405761306f565b60019150506130ce565b60ff841115613052576130516124d9565b5b8360020a915084821115613069576130686124d9565b5b506130ce565b5060208310610133831016604e8410600b84101617156130a45782820a90508381111561309f5761309e6124d9565b5b6130ce565b6130b18484846001612faf565b925090508184048111156130c8576130c76124d9565b5b81810290505b9392505050565b60006130e082611d7c565b91506130eb83612873565b92506130fc63ffffffff8484613002565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061313e82611d7c565b915061314983611d7c565b92508261315957613158613104565b5b828204905092915050565b600061316f826121dd565b915061317a836121dd565b92508161ffff0483118215151615613195576131946124d9565b5b828202905092915050565b60006131ab826121dd565b91506131b6836121dd565b92508261ffff038211156131cd576131cc6124d9565b5b82820190509291505056fea26469706673582212205ac847b396af4cb7ea7156cc332ef3bcd46dec1d1ea9a6e9d857549c172e12cd64736f6c63430008090033";

type StakeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Stake__factory extends ContractFactory {
  constructor(...args: StakeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Stake> {
    return super.deploy(overrides || {}) as Promise<Stake>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Stake {
    return super.attach(address) as Stake;
  }
  override connect(signer: Signer): Stake__factory {
    return super.connect(signer) as Stake__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakeInterface {
    return new utils.Interface(_abi) as StakeInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Stake {
    return new Contract(address, _abi, signerOrProvider) as Stake;
  }
}
