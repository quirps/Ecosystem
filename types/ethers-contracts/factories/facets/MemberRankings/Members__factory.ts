/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Members,
  MembersInterface,
} from "../../../facets/MemberRankings/Members";

const _abi = [
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum iMembers.BountyAccountChange",
        name: "direction",
        type: "uint8",
      },
    ],
    name: "BountyBalanceChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountyUp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountyUpRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountiesDown",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountyDownRate",
        type: "uint256",
      },
    ],
    name: "BountyEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addBountyBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bountyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currencyId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "downRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBounty",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currencyId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBalance",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "bountyAddress",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "upRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "downRate",
            type: "uint256",
          },
        ],
        internalType: "struct iMembers.Bounty",
        name: "bounty_",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getRank",
    outputs: [
      {
        internalType: "uint32",
        name: "rank_",
        type: "uint32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "depth",
        type: "uint64",
      },
    ],
    name: "getUserRankHistory",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "timestamp",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "rank",
            type: "uint32",
          },
        ],
        internalType: "struct LibMembers.MemberRank[]",
        name: "rank_",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "maxBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeBountyBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxBalance",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_bountyAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_upRate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_downRate",
        type: "uint256",
      },
    ],
    name: "setBountyConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "memberAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "rank",
                type: "uint32",
              },
            ],
            internalType: "struct LibMembers.MemberRank",
            name: "memberRank",
            type: "tuple",
          },
        ],
        internalType: "struct LibMembers.Leaf[]",
        name: "leaves",
        type: "tuple[]",
      },
    ],
    name: "setMembersRankPermissioned",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "address",
            name: "memberAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "timestamp",
                type: "uint32",
              },
              {
                internalType: "uint32",
                name: "rank",
                type: "uint32",
              },
            ],
            internalType: "struct LibMembers.MemberRank",
            name: "memberRank",
            type: "tuple",
          },
        ],
        internalType: "struct LibMembers.Leaf",
        name: "leaf",
        type: "tuple",
      },
    ],
    name: "setMembersRanks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "upRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type MembersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MembersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Members__factory extends ContractFactory {
  constructor(...args: MembersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Members> {
    return super.deploy(overrides || {}) as Promise<Members>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Members {
    return super.attach(address) as Members;
  }
  override connect(signer: Signer): Members__factory {
    return super.connect(signer) as Members__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MembersInterface {
    return new utils.Interface(_abi) as MembersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Members {
    return new Contract(address, _abi, signerOrProvider) as Members;
  }
}
