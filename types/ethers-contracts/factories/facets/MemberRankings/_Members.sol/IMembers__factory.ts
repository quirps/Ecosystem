/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IMembers,
  IMembersInterface,
} from "../../../../facets/MemberRankings/_Members.sol/IMembers";

const _abi = [
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum iMembers.BountyAccountChange",
        name: "direction",
        type: "uint8",
      },
    ],
    name: "BountyBalanceChange",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountyUp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountyUpRate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountiesDown",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "bountyDownRate",
        type: "uint256",
      },
    ],
    name: "BountyEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [],
    name: "bountyAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currencyId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "downRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "upRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506101f3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80631feeece21461005c57806363962f401461007a57806373ad468a14610098578063c516358f146100b6578063e9ff9b9d146100d4575b600080fd5b6100646100f2565b6040516100719190610146565b60405180910390f35b6100826100f7565b60405161008f9190610146565b60405180910390f35b6100a06100fd565b6040516100ad9190610146565b60405180910390f35b6100be610103565b6040516100cb91906101a2565b60405180910390f35b6100dc610127565b6040516100e99190610146565b60405180910390f35b600081565b60025481565b60015481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b6000819050919050565b6101408161012d565b82525050565b600060208201905061015b6000830184610137565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061018c82610161565b9050919050565b61019c81610181565b82525050565b60006020820190506101b76000830184610193565b9291505056fea264697066735822122080d237fd2532ed7f1f17b83e20895ddc82f02e39c9a2660bb3b9b9b6028763d064736f6c63430008090033";

type IMembersConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IMembersConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IMembers__factory extends ContractFactory {
  constructor(...args: IMembersConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IMembers> {
    return super.deploy(overrides || {}) as Promise<IMembers>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IMembers {
    return super.attach(address) as IMembers;
  }
  override connect(signer: Signer): IMembers__factory {
    return super.connect(signer) as IMembers__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IMembersInterface {
    return new utils.Interface(_abi) as IMembersInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMembers {
    return new Contract(address, _abi, signerOrProvider) as IMembers;
  }
}
