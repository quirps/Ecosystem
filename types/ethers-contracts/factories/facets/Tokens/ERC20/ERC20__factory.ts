/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC20,
  ERC20Interface,
} from "../../../../facets/Tokens/ERC20/ERC20";

const _abi = [
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "setSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611aca806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806370a082311161007157806370a082311461016857806395d89b4114610198578063a9059cbb146101b6578063b84c8246146101e6578063c47f002714610202578063dd62ed3e1461021e576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b661024e565b6040516100c39190611029565b60405180910390f35b6100e660048036038101906100e191906110f3565b61025d565b6040516100f3919061114e565b60405180910390f35b61010461027f565b6040516101119190611178565b60405180910390f35b610134600480360381019061012f9190611193565b610284565b604051610141919061114e565b60405180910390f35b6101526102ae565b60405161015f9190611202565b60405180910390f35b610182600480360381019061017d919061121d565b6102b7565b60405161018f9190611178565b60405180910390f35b6101a06102cb565b6040516101ad9190611029565b60405180910390f35b6101d060048036038101906101cb91906110f3565b6102da565b6040516101dd919061114e565b60405180910390f35b61020060048036038101906101fb919061137f565b61030a565b005b61021c6004803603810190610217919061137f565b61031e565b005b610238600480360381019061023391906113c8565b610332565b6040516102459190611178565b60405180910390f35b6060610258610378565b905090565b600061027561026a610413565b846000851415610422565b6001905092915050565b600090565b60006102a384846000856040518060200160405280600081525061059e565b600090509392505050565b60006012905090565b60006102c4600083610834565b9050919050565b60606102d561089d565b905090565b60006103006102e7610413565b846000856040518060200160405280600081525061059e565b6001905092915050565b610312610938565b61031b816109b6565b50565b610326610938565b61032f816109df565b50565b60008061033f8484610a08565b90508061034d57600061036f565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff5b91505092915050565b6060610382610aaa565b600101805461039090611437565b80601f01602080910402602001604051908101604052809291908181526020018280546103bc90611437565b80156104095780601f106103de57610100808354040283529160200191610409565b820191906000526020600020905b8154815290600101906020018083116103ec57829003601f168201915b5050505050905090565b600061041d610ad7565b905090565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610491576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610488906114db565b60405180910390fd5b600061049b610b0e565b9050818160010160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3184604051610590919061114e565b60405180910390a350505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561060e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106059061156d565b60405180910390fd5b6000610618610b0e565b90506000610624610413565b9050600061063186610b3b565b9050600061063e86610b3b565b9050600084600001600089815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050868110156106da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d1906115ff565b60405180910390fd5b8681038560000160008a815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550868560000160008a815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610795919061164e565b925050819055508873ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628b8b6040516108129291906116a4565b60405180910390a4610828848b8b8b8b8b610bb5565b50505050505050505050565b60008061083f610b0e565b905080600001600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b60606108a7610aaa565b60020180546108b590611437565b80601f01602080910402602001604051908101604052809291908181526020018280546108e190611437565b801561092e5780601f106109035761010080835404028352916020019161092e565b820191906000526020600020905b81548152906001019060200180831161091157829003601f168201915b5050505050905090565b610940610dd6565b73ffffffffffffffffffffffffffffffffffffffff1661095e610413565b73ffffffffffffffffffffffffffffffffffffffff16146109b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ab90611719565b60405180910390fd5b565b60006109c0610aaa565b9050818160020190805190602001906109da929190610eed565b505050565b60006109e9610aaa565b905081816001019080519060200190610a03929190610eed565b505050565b600080610a13610b0e565b90508060010160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1691505092915050565b6000807ffe4980b3cded4b6c88aa6ce831c92722d1f8b102c2cc3311eefa15eb3b38456090508091505090565b60006014600036905010158015610af35750610af233610de5565b5b15610b0757601436033560601c9050610b0b565b3390505b90565b6000807f6469616d6f6e642e73746f726167652e6572633131353500000000000000000090508091505090565b60606000600167ffffffffffffffff811115610b5a57610b59611254565b5b604051908082528060200260200182016040528015610b885781602001602082028036833780820191505090505b5090508281600081518110610ba057610b9f611739565b5b60200260200101818152505080915050919050565b610bd48473ffffffffffffffffffffffffffffffffffffffff16610e4d565b15610dcd573073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610c1257610dce565b8373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401610c539594939291906117cc565b602060405180830381600087803b158015610c6d57600080fd5b505af1925050508015610c9e57506040513d601f19601f82011682018060405250810190610c9b919061187e565b60015b610d4457610caa6118b8565b806308c379a01415610d075750610cbf6118da565b80610cca5750610d09565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfe9190611029565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3b906119e2565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610dcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc290611a74565b60405180910390fd5b505b5b505050505050565b6000610de0610e60565b905090565b600080610df0610e93565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614915050919050565b600080823b905060008111915050919050565b6000610e6a610ec0565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000807f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca9777690508091505090565b6000807fd00049dc7109015045860694acecd3dc33338404aaf6e55a1c98a2bf41477b8590508091505090565b828054610ef990611437565b90600052602060002090601f016020900481019282610f1b5760008555610f62565b82601f10610f3457805160ff1916838001178555610f62565b82800160010185558215610f62579182015b82811115610f61578251825591602001919060010190610f46565b5b509050610f6f9190610f73565b5090565b5b80821115610f8c576000816000905550600101610f74565b5090565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fca578082015181840152602081019050610faf565b83811115610fd9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610ffb82610f90565b6110058185610f9b565b9350611015818560208601610fac565b61101e81610fdf565b840191505092915050565b600060208201905081810360008301526110438184610ff0565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061108a8261105f565b9050919050565b61109a8161107f565b81146110a557600080fd5b50565b6000813590506110b781611091565b92915050565b6000819050919050565b6110d0816110bd565b81146110db57600080fd5b50565b6000813590506110ed816110c7565b92915050565b6000806040838503121561110a57611109611055565b5b6000611118858286016110a8565b9250506020611129858286016110de565b9150509250929050565b60008115159050919050565b61114881611133565b82525050565b6000602082019050611163600083018461113f565b92915050565b611172816110bd565b82525050565b600060208201905061118d6000830184611169565b92915050565b6000806000606084860312156111ac576111ab611055565b5b60006111ba868287016110a8565b93505060206111cb868287016110a8565b92505060406111dc868287016110de565b9150509250925092565b600060ff82169050919050565b6111fc816111e6565b82525050565b600060208201905061121760008301846111f3565b92915050565b60006020828403121561123357611232611055565b5b6000611241848285016110a8565b91505092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61128c82610fdf565b810181811067ffffffffffffffff821117156112ab576112aa611254565b5b80604052505050565b60006112be61104b565b90506112ca8282611283565b919050565b600067ffffffffffffffff8211156112ea576112e9611254565b5b6112f382610fdf565b9050602081019050919050565b82818337600083830152505050565b600061132261131d846112cf565b6112b4565b90508281526020810184848401111561133e5761133d61124f565b5b611349848285611300565b509392505050565b600082601f8301126113665761136561124a565b5b813561137684826020860161130f565b91505092915050565b60006020828403121561139557611394611055565b5b600082013567ffffffffffffffff8111156113b3576113b261105a565b5b6113bf84828501611351565b91505092915050565b600080604083850312156113df576113de611055565b5b60006113ed858286016110a8565b92505060206113fe858286016110a8565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061144f57607f821691505b6020821081141561146357611462611408565b5b50919050565b7f455243313135353a2073657474696e6720617070726f76616c2073746174757360008201527f20666f722073656c660000000000000000000000000000000000000000000000602082015250565b60006114c5602983610f9b565b91506114d082611469565b604082019050919050565b600060208201905081810360008301526114f4816114b8565b9050919050565b7f455243313135353a207472616e7366657220746f20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611557602583610f9b565b9150611562826114fb565b604082019050919050565b600060208201905081810360008301526115868161154a565b9050919050565b7f455243313135353a20696e73756666696369656e742062616c616e636520666f60008201527f72207472616e7366657200000000000000000000000000000000000000000000602082015250565b60006115e9602a83610f9b565b91506115f48261158d565b604082019050919050565b60006020820190508181036000830152611618816115dc565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611659826110bd565b9150611664836110bd565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116995761169861161f565b5b828201905092915050565b60006040820190506116b96000830185611169565b6116c66020830184611169565b9392505050565b7f4d757374206265207468652045636f73797374656d206f776e65720000000000600082015250565b6000611703601b83610f9b565b915061170e826116cd565b602082019050919050565b60006020820190508181036000830152611732816116f6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6117718161107f565b82525050565b600081519050919050565b600082825260208201905092915050565b600061179e82611777565b6117a88185611782565b93506117b8818560208601610fac565b6117c181610fdf565b840191505092915050565b600060a0820190506117e16000830188611768565b6117ee6020830187611768565b6117fb6040830186611169565b6118086060830185611169565b818103608083015261181a8184611793565b90509695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61185b81611826565b811461186657600080fd5b50565b60008151905061187881611852565b92915050565b60006020828403121561189457611893611055565b5b60006118a284828501611869565b91505092915050565b60008160e01c9050919050565b600060033d11156118d75760046000803e6118d46000516118ab565b90505b90565b600060443d10156118ea5761196d565b6118f261104b565b60043d036004823e80513d602482011167ffffffffffffffff8211171561191a57505061196d565b808201805167ffffffffffffffff811115611938575050505061196d565b80602083010160043d03850181111561195557505050505061196d565b61196482602001850186611283565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b60006119cc603483610f9b565b91506119d782611970565b604082019050919050565b600060208201905081810360008301526119fb816119bf565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b6000611a5e602883610f9b565b9150611a6982611a02565b604082019050919050565b60006020820190508181036000830152611a8d81611a51565b905091905056fea2646970667358221220b30917744763314d2e8ea6e17113c7fb6ec30c0b1c6ee606606ad0865d9dd6c664736f6c63430008090033";

type ERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20__factory extends ContractFactory {
  constructor(...args: ERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20> {
    return super.deploy(overrides || {}) as Promise<ERC20>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  override connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
