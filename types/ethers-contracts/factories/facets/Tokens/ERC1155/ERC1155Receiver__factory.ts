/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1155Receiver,
  ERC1155ReceiverInterface,
} from "../../../../facets/Tokens/ERC1155/ERC1155Receiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610442806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063bc197c811461003b578063f23a6e611461006b575b600080fd5b6100556004803603810190610050919061020a565b61009b565b6040516100629190610321565b60405180910390f35b61008560048036038101906100809190610372565b6100b3565b6040516100929190610321565b60405180910390f35b60006100a56100c9565b905098975050505050505050565b60006100bd6100d8565b90509695505050505050565b600063bc197c8160e01b905090565b600063f23a6e6160e01b905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061011c826100f1565b9050919050565b61012c81610111565b811461013757600080fd5b50565b60008135905061014981610123565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126101745761017361014f565b5b8235905067ffffffffffffffff81111561019157610190610154565b5b6020830191508360208202830111156101ad576101ac610159565b5b9250929050565b60008083601f8401126101ca576101c961014f565b5b8235905067ffffffffffffffff8111156101e7576101e6610154565b5b60208301915083600182028301111561020357610202610159565b5b9250929050565b60008060008060008060008060a0898b03121561022a576102296100e7565b5b60006102388b828c0161013a565b98505060206102498b828c0161013a565b975050604089013567ffffffffffffffff81111561026a576102696100ec565b5b6102768b828c0161015e565b9650965050606089013567ffffffffffffffff811115610299576102986100ec565b5b6102a58b828c0161015e565b9450945050608089013567ffffffffffffffff8111156102c8576102c76100ec565b5b6102d48b828c016101b4565b92509250509295985092959890939650565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61031b816102e6565b82525050565b60006020820190506103366000830184610312565b92915050565b6000819050919050565b61034f8161033c565b811461035a57600080fd5b50565b60008135905061036c81610346565b92915050565b60008060008060008060a0878903121561038f5761038e6100e7565b5b600061039d89828a0161013a565b96505060206103ae89828a0161013a565b95505060406103bf89828a0161035d565b94505060606103d089828a0161035d565b935050608087013567ffffffffffffffff8111156103f1576103f06100ec565b5b6103fd89828a016101b4565b9250925050929550929550929556fea2646970667358221220210513c228af44ea6a10e587d68b5c883d346bb634e8aef5963ab66c9a7bf3ef64736f6c63430008090033";

type ERC1155ReceiverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ReceiverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Receiver__factory extends ContractFactory {
  constructor(...args: ERC1155ReceiverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Receiver> {
    return super.deploy(overrides || {}) as Promise<ERC1155Receiver>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155Receiver {
    return super.attach(address) as ERC1155Receiver;
  }
  override connect(signer: Signer): ERC1155Receiver__factory {
    return super.connect(signer) as ERC1155Receiver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155ReceiverInterface {
    return new utils.Interface(_abi) as ERC1155ReceiverInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Receiver {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Receiver;
  }
}
