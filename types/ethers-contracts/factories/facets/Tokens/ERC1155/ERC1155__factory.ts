/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../../facets/Tokens/ERC1155/ERC1155";

const _abi = [
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50612596806100206000396000f3fe608060405234801561001057600080fd5b506004361061007c5760003560e01c80634e1273f41161005b5780634e1273f4146100fd5780636b20c4541461012d578063731133e914610149578063f5298aca146101655761007c565b8062fdd58e146100815780630e89341c146100b15780631f7fdffa146100e1575b600080fd5b61009b6004803603810190610096919061147c565b610181565b6040516100a891906114cb565b60405180910390f35b6100cb60048036038101906100c691906114e6565b61025a565b6040516100d891906115ac565b60405180910390f35b6100fb60048036038101906100f691906117cb565b6102fd565b005b61011760048036038101906101129190611949565b61030f565b6040516101249190611a7f565b60405180910390f35b61014760048036038101906101429190611aa1565b610428565b005b610163600480360381019061015e9190611b2c565b610438565b005b61017f600480360381019061017a9190611baf565b61044a565b005b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156101f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101e990611c74565b60405180910390fd5b60006101fc61045a565b905080600001600084815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b6060600061026661045a565b905080600201805461027790611cc3565b80601f01602080910402602001604051908101604052809291908181526020018280546102a390611cc3565b80156102f05780601f106102c5576101008083540402835291602001916102f0565b820191906000526020600020905b8154815290600101906020018083116102d357829003601f168201915b5050505050915050919050565b61030984848484610487565b50505050565b60608151835114610355576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161034c90611d67565b60405180910390fd5b6000835167ffffffffffffffff811115610372576103716115d3565b5b6040519080825280602002602001820160405280156103a05781602001602082028036833780820191505090505b50905060005b845181101561041d576103ed8582815181106103c5576103c4611d87565b5b60200260200101518583815181106103e0576103df611d87565b5b6020026020010151610181565b828281518110610400576103ff611d87565b5b6020026020010181815250508061041690611de5565b90506103a6565b508091505092915050565b6104338383836106d9565b505050565b610444848484846109f5565b50505050565b610455838383610bb3565b505050565b6000807f6469616d6f6e642e73746f726167652e6572633131353500000000000000000090508091505090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156104f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ee90611ea0565b60405180910390fd5b815183511461053b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053290611f32565b60405180910390fd5b60008061054661045a565b90506000610552610e2a565b905060005b86518110156106385785818151811061057357610572611d87565b5b602002602001015183600001600089848151811061059457610593611d87565b5b6020026020010151815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105f69190611f52565b925050819055508581815181106106105761060f611d87565b5b6020026020010151846106239190611f52565b9350808061063090611de5565b915050610557565b508282600301819055508673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb89896040516106b9929190611fa8565b60405180910390a46106d081600089898989610e39565b50505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074090612051565b60405180910390fd5b805182511461078d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078490611f32565b60405180910390fd5b600061079761045a565b905060006107a3610e2a565b9050600080600090505b85518110156109525760008682815181106107cb576107ca611d87565b5b6020026020010151905060008683815181106107ea576107e9611d87565b5b6020026020010151905080846108009190611f52565b9350600086600001600084815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561089c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610893906120e3565b60405180910390fd5b84876003015410156108e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108da9061214f565b60405180910390fd5b81810387600001600085815260200190815260200160002060008c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505050808061094a90611de5565b9150506107ad565b5080836003016000828254610967919061216f565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb88886040516109e5929190611fa8565b60405180910390a4505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610a65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5c90611ea0565b60405180910390fd5b6000610a6f61045a565b90506000610a7b610e2a565b90506000610a888661105a565b90506000610a958661105a565b90508584600001600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610af99190611f52565b9250508190555085846003016000828254610b149190611f52565b925050819055508773ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610b929291906121a3565b60405180910390a4610ba98360008a8a8a8a6110d4565b5050505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1a90612051565b60405180910390fd5b6000610c2d61045a565b90506000610c39610e2a565b90506000610c468561105a565b90506000610c538561105a565b9050600084600001600088815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905085811015610cef576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce6906120e3565b60405180910390fd5b8585600301541015610d36576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2d9061214f565b60405180910390fd5b85810385600001600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550858560030160008282540392505081905550600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610e189291906121a3565b60405180910390a45050505050505050565b6000610e346112f5565b905090565b610e588473ffffffffffffffffffffffffffffffffffffffff1661132c565b15611051573073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610e9657611052565b8373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401610ed7959493929190612230565b602060405180830381600087803b158015610ef157600080fd5b505af1925050508015610f2257506040513d601f19601f82011682018060405250810190610f1f91906122f0565b60015b610fc857610f2e61232a565b806308c379a01415610f8b5750610f4361234c565b80610f4e5750610f8d565b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8291906115ac565b60405180910390fd5b505b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fbf90612454565b60405180910390fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461104f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611046906124e6565b60405180910390fd5b505b5b505050505050565b60606000600167ffffffffffffffff811115611079576110786115d3565b5b6040519080825280602002602001820160405280156110a75781602001602082028036833780820191505090505b50905082816000815181106110bf576110be611d87565b5b60200260200101818152505080915050919050565b6110f38473ffffffffffffffffffffffffffffffffffffffff1661132c565b156112ec573073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415611131576112ed565b8373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611172959493929190612506565b602060405180830381600087803b15801561118c57600080fd5b505af19250505080156111bd57506040513d601f19601f820116820180604052508101906111ba91906122f0565b60015b611263576111c961232a565b806308c379a0141561122657506111de61234c565b806111e95750611228565b806040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161121d91906115ac565b60405180910390fd5b505b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125a90612454565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146112ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112e1906124e6565b60405180910390fd5b505b5b505050505050565b6000601460003690501015801561131157506113103361133f565b5b1561132557601436033560601c9050611329565b3390505b90565b600080823b905060008111915050919050565b60008061134a6113a7565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614915050919050565b6000807f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca9777690508091505090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611413826113e8565b9050919050565b61142381611408565b811461142e57600080fd5b50565b6000813590506114408161141a565b92915050565b6000819050919050565b61145981611446565b811461146457600080fd5b50565b60008135905061147681611450565b92915050565b60008060408385031215611493576114926113de565b5b60006114a185828601611431565b92505060206114b285828601611467565b9150509250929050565b6114c581611446565b82525050565b60006020820190506114e060008301846114bc565b92915050565b6000602082840312156114fc576114fb6113de565b5b600061150a84828501611467565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561154d578082015181840152602081019050611532565b8381111561155c576000848401525b50505050565b6000601f19601f8301169050919050565b600061157e82611513565b611588818561151e565b935061159881856020860161152f565b6115a181611562565b840191505092915050565b600060208201905081810360008301526115c68184611573565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61160b82611562565b810181811067ffffffffffffffff8211171561162a576116296115d3565b5b80604052505050565b600061163d6113d4565b90506116498282611602565b919050565b600067ffffffffffffffff821115611669576116686115d3565b5b602082029050602081019050919050565b600080fd5b600061169261168d8461164e565b611633565b905080838252602082019050602084028301858111156116b5576116b461167a565b5b835b818110156116de57806116ca8882611467565b8452602084019350506020810190506116b7565b5050509392505050565b600082601f8301126116fd576116fc6115ce565b5b813561170d84826020860161167f565b91505092915050565b600080fd5b600067ffffffffffffffff821115611736576117356115d3565b5b61173f82611562565b9050602081019050919050565b82818337600083830152505050565b600061176e6117698461171b565b611633565b90508281526020810184848401111561178a57611789611716565b5b61179584828561174c565b509392505050565b600082601f8301126117b2576117b16115ce565b5b81356117c284826020860161175b565b91505092915050565b600080600080608085870312156117e5576117e46113de565b5b60006117f387828801611431565b945050602085013567ffffffffffffffff811115611814576118136113e3565b5b611820878288016116e8565b935050604085013567ffffffffffffffff811115611841576118406113e3565b5b61184d878288016116e8565b925050606085013567ffffffffffffffff81111561186e5761186d6113e3565b5b61187a8782880161179d565b91505092959194509250565b600067ffffffffffffffff8211156118a1576118a06115d3565b5b602082029050602081019050919050565b60006118c56118c084611886565b611633565b905080838252602082019050602084028301858111156118e8576118e761167a565b5b835b8181101561191157806118fd8882611431565b8452602084019350506020810190506118ea565b5050509392505050565b600082601f8301126119305761192f6115ce565b5b81356119408482602086016118b2565b91505092915050565b600080604083850312156119605761195f6113de565b5b600083013567ffffffffffffffff81111561197e5761197d6113e3565b5b61198a8582860161191b565b925050602083013567ffffffffffffffff8111156119ab576119aa6113e3565b5b6119b7858286016116e8565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119f681611446565b82525050565b6000611a0883836119ed565b60208301905092915050565b6000602082019050919050565b6000611a2c826119c1565b611a3681856119cc565b9350611a41836119dd565b8060005b83811015611a72578151611a5988826119fc565b9750611a6483611a14565b925050600181019050611a45565b5085935050505092915050565b60006020820190508181036000830152611a998184611a21565b905092915050565b600080600060608486031215611aba57611ab96113de565b5b6000611ac886828701611431565b935050602084013567ffffffffffffffff811115611ae957611ae86113e3565b5b611af5868287016116e8565b925050604084013567ffffffffffffffff811115611b1657611b156113e3565b5b611b22868287016116e8565b9150509250925092565b60008060008060808587031215611b4657611b456113de565b5b6000611b5487828801611431565b9450506020611b6587828801611467565b9350506040611b7687828801611467565b925050606085013567ffffffffffffffff811115611b9757611b966113e3565b5b611ba38782880161179d565b91505092959194509250565b600080600060608486031215611bc857611bc76113de565b5b6000611bd686828701611431565b9350506020611be786828701611467565b9250506040611bf886828701611467565b9150509250925092565b7f455243313135353a2061646472657373207a65726f206973206e6f742061207660008201527f616c6964206f776e657200000000000000000000000000000000000000000000602082015250565b6000611c5e602a8361151e565b9150611c6982611c02565b604082019050919050565b60006020820190508181036000830152611c8d81611c51565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611cdb57607f821691505b60208210811415611cef57611cee611c94565b5b50919050565b7f455243313135353a206163636f756e747320616e6420696473206c656e67746860008201527f206d69736d617463680000000000000000000000000000000000000000000000602082015250565b6000611d5160298361151e565b9150611d5c82611cf5565b604082019050919050565b60006020820190508181036000830152611d8081611d44565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611df082611446565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415611e2357611e22611db6565b5b600182019050919050565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611e8a60218361151e565b9150611e9582611e2e565b604082019050919050565b60006020820190508181036000830152611eb981611e7d565b9050919050565b7f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060008201527f6d69736d61746368000000000000000000000000000000000000000000000000602082015250565b6000611f1c60288361151e565b9150611f2782611ec0565b604082019050919050565b60006020820190508181036000830152611f4b81611f0f565b9050919050565b6000611f5d82611446565b9150611f6883611446565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611f9d57611f9c611db6565b5b828201905092915050565b60006040820190508181036000830152611fc28185611a21565b90508181036020830152611fd68184611a21565b90509392505050565b7f455243313135353a206275726e2066726f6d20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061203b60238361151e565b915061204682611fdf565b604082019050919050565b6000602082019050818103600083015261206a8161202e565b9050919050565b7f455243313135353a206275726e20616d6f756e7420657863656564732062616c60008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b60006120cd60248361151e565b91506120d882612071565b604082019050919050565b600060208201905081810360008301526120fc816120c0565b9050919050565b7f4578636565647320746f74616c20737570706c792e0000000000000000000000600082015250565b600061213960158361151e565b915061214482612103565b602082019050919050565b600060208201905081810360008301526121688161212c565b9050919050565b600061217a82611446565b915061218583611446565b92508282101561219857612197611db6565b5b828203905092915050565b60006040820190506121b860008301856114bc565b6121c560208301846114bc565b9392505050565b6121d581611408565b82525050565b600081519050919050565b600082825260208201905092915050565b6000612202826121db565b61220c81856121e6565b935061221c81856020860161152f565b61222581611562565b840191505092915050565b600060a08201905061224560008301886121cc565b61225260208301876121cc565b81810360408301526122648186611a21565b905081810360608301526122788185611a21565b9050818103608083015261228c81846121f7565b90509695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6122cd81612298565b81146122d857600080fd5b50565b6000815190506122ea816122c4565b92915050565b600060208284031215612306576123056113de565b5b6000612314848285016122db565b91505092915050565b60008160e01c9050919050565b600060033d11156123495760046000803e61234660005161231d565b90505b90565b600060443d101561235c576123df565b6123646113d4565b60043d036004823e80513d602482011167ffffffffffffffff8211171561238c5750506123df565b808201805167ffffffffffffffff8111156123aa57505050506123df565b80602083010160043d0385018111156123c75750505050506123df565b6123d682602001850186611602565b82955050505050505b90565b7f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061243e60348361151e565b9150612449826123e2565b604082019050919050565b6000602082019050818103600083015261246d81612431565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b60006124d060288361151e565b91506124db82612474565b604082019050919050565b600060208201905081810360008301526124ff816124c3565b9050919050565b600060a08201905061251b60008301886121cc565b61252860208301876121cc565b61253560408301866114bc565b61254260608301856114bc565b818103608083015261255481846121f7565b9050969550505050505056fea2646970667358221220294de1da2cb3224d040fbbaffd93128fab9b9f7b4c52665526e43fc884aea8a664736f6c63430008090033";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155> {
    return super.deploy(overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
