/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Sales, SalesInterface } from "../../../facets/Sales/Sales";

const _abi = [
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numBundles",
        type: "uint256",
      },
    ],
    name: "ItemPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "SaleCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "rankRequired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predecessorSaleId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "itemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "itemAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "paymentTokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentAmount",
            type: "uint256",
          },
        ],
        internalType: "struct LibSales.Sale",
        name: "saleData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "predecessorSaleId",
        type: "uint256",
      },
    ],
    name: "createSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "retrieveSaleAndPredecessors",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "rankRequired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predecessorSaleId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "itemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "itemAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "paymentTokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentAmount",
            type: "uint256",
          },
        ],
        internalType: "struct LibSales.Sale[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numBundles",
        type: "uint256",
      },
    ],
    name: "validatePurchase",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506113ec806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632d104a77146100465780634c04e9c614610076578063e51c16e514610092575b600080fd5b610060600480360381019061005b9190610954565b6100ae565b60405161006d9190610bec565b60405180910390f35b610090600480360381019061008b9190610c0e565b6100c0565b005b6100ac60048036038101906100a79190610ef5565b6100ce565b005b60606100b9826100de565b9050919050565b6100ca82826102ae565b5050565b6100d9838383610470565b505050565b606060006100eb83610562565b90506000816020015163ffffffff161161013a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013190610fc1565b60405180910390fd5b6000606490508067ffffffffffffffff81111561015a57610159610c64565b5b60405190808252806020026020018201604052801561019357816020015b610180610848565b8152602001906001900390816101785790505b50925060005b600085141580156101a957508181105b156101f257828482815181106101c2576101c1610fe1565b5b6020026020010181905250826080015194506101dd85610562565b925080806101ea9061103f565b915050610199565b60008167ffffffffffffffff81111561020e5761020d610c64565b5b60405190808252806020026020018201604052801561024757816020015b610234610848565b81526020019060019003908161022c5790505b50905060005b828110156102a15785818151811061026857610267610fe1565b5b602002602001015182828151811061028357610282610fe1565b5b602002602001018190525080806102999061103f565b91505061024d565b5080945050505050919050565b60006102b983610562565b905060006102c784336106cd565b9050816000015163ffffffff1642101580156102ed5750816020015163ffffffff164211155b61032c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610323906110d4565b60405180910390fd5b8160400151610339610736565b60010160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156103bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103b290611140565b60405180910390fd5b816060015183826103cc9190611160565b111561040d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040490611202565b60405180910390fd5b600082608001511461046a5760006104298360800151336106cd565b11610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046090611294565b60405180910390fd5b5b50505050565b8160c00151518260a0015151146104bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104b390611300565b60405180910390fd5b816000015163ffffffff16826020015163ffffffff1611610512576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105099061136c565b60405180910390fd5b808260800181815250506105268383610763565b7f0f67e8677c172d56c079c18dcff5c9904d5ff20e6b5453eafe5f8dcc7ed6a00883604051610555919061139b565b60405180910390a1505050565b61056a610848565b6000610574610736565b9050806002016000848152602001908152602001600020604051806101200160405290816000820160009054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016000820160049054906101000a900463ffffffff1663ffffffff1663ffffffff1681526020016001820154815260200160028201548152602001600382015481526020016004820180548060200260200160405190810160405280929190818152602001828054801561065057602002820191906000526020600020905b81548152602001906001019080831161063c575b50505050508152602001600582018054806020026020016040519081016040528092919081815260200182805480156106a857602002820191906000526020600020905b815481526020019060010190808311610694575b5050505050815260200160068201548152602001600782015481525050915050919050565b6000806106d8610736565b905080600301600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205491505092915050565b6000807f4a7d19a55c2d83c128c01abf71c51d204604cea19950bd253f8aa80100ae3ed790508091505090565b600061076d610736565b90508181600201600085815260200190815260200160002060008201518160000160006101000a81548163ffffffff021916908363ffffffff16021790555060208201518160000160046101000a81548163ffffffff021916908363ffffffff16021790555060408201518160010155606082015181600201556080820151816003015560a082015181600401908051906020019061080d9291906108a0565b5060c082015181600501908051906020019061082a9291906108a0565b5060e082015181600601556101008201518160070155905050505050565b604051806101200160405280600063ffffffff168152602001600063ffffffff168152602001600081526020016000815260200160008152602001606081526020016060815260200160008152602001600081525090565b8280548282559060005260206000209081019282156108dc579160200282015b828111156108db5782518255916020019190600101906108c0565b5b5090506108e991906108ed565b5090565b5b808211156109065760008160009055506001016108ee565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b6109318161091e565b811461093c57600080fd5b50565b60008135905061094e81610928565b92915050565b60006020828403121561096a57610969610914565b5b60006109788482850161093f565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600063ffffffff82169050919050565b6109c6816109ad565b82525050565b6109d58161091e565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000610a1383836109cc565b60208301905092915050565b6000602082019050919050565b6000610a37826109db565b610a4181856109e6565b9350610a4c836109f7565b8060005b83811015610a7d578151610a648882610a07565b9750610a6f83610a1f565b925050600181019050610a50565b5085935050505092915050565b600061012083016000830151610aa360008601826109bd565b506020830151610ab660208601826109bd565b506040830151610ac960408601826109cc565b506060830151610adc60608601826109cc565b506080830151610aef60808601826109cc565b5060a083015184820360a0860152610b078282610a2c565b91505060c083015184820360c0860152610b218282610a2c565b91505060e0830151610b3660e08601826109cc565b50610100830151610b4b6101008601826109cc565b508091505092915050565b6000610b628383610a8a565b905092915050565b6000602082019050919050565b6000610b8282610981565b610b8c818561098c565b935083602082028501610b9e8561099d565b8060005b85811015610bda5784840389528151610bbb8582610b56565b9450610bc683610b6a565b925060208a01995050600181019050610ba2565b50829750879550505050505092915050565b60006020820190508181036000830152610c068184610b77565b905092915050565b60008060408385031215610c2557610c24610914565b5b6000610c338582860161093f565b9250506020610c448582860161093f565b9150509250929050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610c9c82610c53565b810181811067ffffffffffffffff82111715610cbb57610cba610c64565b5b80604052505050565b6000610cce61090a565b9050610cda8282610c93565b919050565b600080fd5b610ced816109ad565b8114610cf857600080fd5b50565b600081359050610d0a81610ce4565b92915050565b600080fd5b600067ffffffffffffffff821115610d3057610d2f610c64565b5b602082029050602081019050919050565b600080fd5b6000610d59610d5484610d15565b610cc4565b90508083825260208201905060208402830185811115610d7c57610d7b610d41565b5b835b81811015610da55780610d91888261093f565b845260208401935050602081019050610d7e565b5050509392505050565b600082601f830112610dc457610dc3610d10565b5b8135610dd4848260208601610d46565b91505092915050565b60006101208284031215610df457610df3610c4e565b5b610dff610120610cc4565b90506000610e0f84828501610cfb565b6000830152506020610e2384828501610cfb565b6020830152506040610e378482850161093f565b6040830152506060610e4b8482850161093f565b6060830152506080610e5f8482850161093f565b60808301525060a082013567ffffffffffffffff811115610e8357610e82610cdf565b5b610e8f84828501610daf565b60a08301525060c082013567ffffffffffffffff811115610eb357610eb2610cdf565b5b610ebf84828501610daf565b60c08301525060e0610ed38482850161093f565b60e083015250610100610ee88482850161093f565b6101008301525092915050565b600080600060608486031215610f0e57610f0d610914565b5b6000610f1c8682870161093f565b935050602084013567ffffffffffffffff811115610f3d57610f3c610919565b5b610f4986828701610ddd565b9250506040610f5a8682870161093f565b9150509250925092565b600082825260208201905092915050565b7f4e6f6e6578697374656e742073616c6500000000000000000000000000000000600082015250565b6000610fab601083610f64565b9150610fb682610f75565b602082019050919050565b60006020820190508181036000830152610fda81610f9e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061104a8261091e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561107d5761107c611010565b5b600182019050919050565b7f53616c65206e6f74206163746976650000000000000000000000000000000000600082015250565b60006110be600f83610f64565b91506110c982611088565b602082019050919050565b600060208201905081810360008301526110ed816110b1565b9050919050565b7f496e73756666696369656e742072616e6b000000000000000000000000000000600082015250565b600061112a601183610f64565b9150611135826110f4565b602082019050919050565b600060208201905081810360008301526111598161111d565b9050919050565b600061116b8261091e565b91506111768361091e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156111ab576111aa611010565b5b828201905092915050565b7f5075726368617365206c696d6974206578636565646564000000000000000000600082015250565b60006111ec601783610f64565b91506111f7826111b6565b602082019050919050565b6000602082019050818103600083015261121b816111df565b9050919050565b7f4d7573742070757263686173652066726f6d207072656465636573736f72207360008201527f616c652066697273740000000000000000000000000000000000000000000000602082015250565b600061127e602983610f64565b915061128982611222565b604082019050919050565b600060208201905081810360008301526112ad81611271565b9050919050565b7f4d69736d617463686564206974656d2064617461000000000000000000000000600082015250565b60006112ea601483610f64565b91506112f5826112b4565b602082019050919050565b60006020820190508181036000830152611319816112dd565b9050919050565b7f496e76616c69642074696d652072616e67650000000000000000000000000000600082015250565b6000611356601283610f64565b915061136182611320565b602082019050919050565b6000602082019050818103600083015261138581611349565b9050919050565b6113958161091e565b82525050565b60006020820190506113b0600083018461138c565b9291505056fea2646970667358221220309cf062fe53a83c226683bae3ba8554c052a7f4604392734341d91b208c29ca64736f6c63430008090033";

type SalesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SalesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sales__factory extends ContractFactory {
  constructor(...args: SalesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Sales> {
    return super.deploy(overrides || {}) as Promise<Sales>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Sales {
    return super.attach(address) as Sales;
  }
  override connect(signer: Signer): Sales__factory {
    return super.connect(signer) as Sales__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SalesInterface {
    return new utils.Interface(_abi) as SalesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sales {
    return new Contract(address, _abi, signerOrProvider) as Sales;
  }
}
