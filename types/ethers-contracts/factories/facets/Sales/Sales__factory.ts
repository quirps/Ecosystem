/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { Sales, SalesInterface } from "../../../facets/Sales/Sales";

const _abi = [
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "numBundles",
        type: "uint256",
      },
    ],
    name: "ItemPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "SaleCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "rankRequired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predecessorSaleId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "itemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "itemAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "paymentTokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isEther",
            type: "bool",
          },
        ],
        internalType: "struct LibSales.Sale",
        name: "saleData",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "predecessorSaleId",
        type: "uint256",
      },
    ],
    name: "createSale",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
    ],
    name: "retrieveSaleAndPredecessors",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "startTime",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "endTime",
            type: "uint32",
          },
          {
            internalType: "uint256",
            name: "rankRequired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "limit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "predecessorSaleId",
            type: "uint256",
          },
          {
            internalType: "uint256[]",
            name: "itemIds",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "itemAmounts",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "paymentTokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentAmount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isEther",
            type: "bool",
          },
        ],
        internalType: "struct LibSales.Sale[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numBundles",
        type: "uint256",
      },
    ],
    name: "validatePurchase",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b50610c8e8061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c80632d104a77146100435780634c04e9c61461006c578063caf97b1114610081575b5f5ffd5b61005661005136600461086c565b610094565b60405161006391906108bd565b60405180910390f35b61007f61007a3660046109bc565b6100a5565b005b61007f61008f366004610af2565b6100b3565b606061009f826100c3565b92915050565b6100af8282610256565b5050565b6100be838383610420565b505050565b60605f6100cf83610510565b90505f816020015163ffffffff16116101225760405162461bcd60e51b815260206004820152601060248201526f4e6f6e6578697374656e742073616c6560801b60448201526064015b60405180910390fd5b604080516064808252610ca0820190925281816020015b6101416107b6565b8152602001906001900390816101395790505092505f5b841580159061016657508181105b156101ad578284828151811061017e5761017e610c05565b60200260200101819052508260800151945061019985610510565b9250806101a581610c2d565b915050610158565b5f8167ffffffffffffffff8111156101c7576101c76109dc565b60405190808252806020026020018201604052801561020057816020015b6101ed6107b6565b8152602001906001900390816101e55790505b5090505f5b8281101561024c5785818151811061021f5761021f610c05565b602002602001015182828151811061023957610239610c05565b6020908102919091010152600101610205565b5095945050505050565b5f61026083610510565b90505f61026d8433610680565b825190915063ffffffff1642108015906102915750816020015163ffffffff164211155b6102cf5760405162461bcd60e51b815260206004820152600f60248201526e53616c65206e6f742061637469766560881b6044820152606401610119565b604082810151335f9081527f4a7d19a55c2d83c128c01abf71c51d204604cea19950bd253f8aa80100ae3ed8602052919091205410156103455760405162461bcd60e51b8152602060048201526011602482015270496e73756666696369656e742072616e6b60781b6044820152606401610119565b60608201516103548483610c45565b11156103a25760405162461bcd60e51b815260206004820152601760248201527f5075726368617365206c696d69742065786365656465640000000000000000006044820152606401610119565b60808201511561041a575f6103bb836080015133610680565b1161041a5760405162461bcd60e51b815260206004820152602960248201527f4d7573742070757263686173652066726f6d207072656465636573736f722073604482015268185b1948199a5c9cdd60ba1b6064820152608401610119565b50505050565b8160c00151518260a0015151146104705760405162461bcd60e51b81526020600482015260146024820152734d69736d617463686564206974656d206461746160601b6044820152606401610119565b815f015163ffffffff16826020015163ffffffff16116104c75760405162461bcd60e51b8152602060048201526012602482015271496e76616c69642074696d652072616e676560701b6044820152606401610119565b608082018190526104d883836106c6565b6040518381527f0f67e8677c172d56c079c18dcff5c9904d5ff20e6b5453eafe5f8dcc7ed6a0089060200160405180910390a1505050565b6105186107b6565b5f8281527f4a7d19a55c2d83c128c01abf71c51d204604cea19950bd253f8aa80100ae3ed96020908152604091829020825161014081018452815463ffffffff8082168352640100000000909104168184015260018201548185015260028201546060820152600382015460808201526004820180548551818602810186019096528086527f4a7d19a55c2d83c128c01abf71c51d204604cea19950bd253f8aa80100ae3ed795929460a08601939291908301828280156105f657602002820191905f5260205f20905b8154815260200190600101908083116105e2575b505050505081526020016005820180548060200260200160405190810160405280929190818152602001828054801561064c57602002820191905f5260205f20905b815481526020019060010190808311610638575b5050509183525050600682015460208201526007820154604082015260089091015460ff1615156060909101529392505050565b5f9182527f4a7d19a55c2d83c128c01abf71c51d204604cea19950bd253f8aa80100ae3eda602090815260408084206001600160a01b0393909316845291905290205490565b5f7f4a7d19a55c2d83c128c01abf71c51d204604cea19950bd253f8aa80100ae3ed75f84815260028083016020908152604092839020865181548389015163ffffffff9081166401000000000267ffffffffffffffff199092169216919091171781559286015160018401556060860151918301919091556080850151600383015560a085015180519394508593610764926004850192019061080f565b5060c0820151805161078091600584019160209091019061080f565b5060e082015160068201556101008201516007820155610120909101516008909101805460ff1916911515919091179055505050565b6040518061014001604052805f63ffffffff1681526020015f63ffffffff1681526020015f81526020015f81526020015f815260200160608152602001606081526020015f81526020015f81526020015f151581525090565b828054828255905f5260205f20908101928215610848579160200282015b8281111561084857825182559160200191906001019061082d565b50610854929150610858565b5090565b5b80821115610854575f8155600101610859565b5f6020828403121561087c575f5ffd5b5035919050565b5f8151808452602084019350602083015f5b828110156108b3578151865260209586019590910190600101610895565b5093949350505050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b828110156109b057868503603f190184528151805163ffffffff1686526020810151610917602088018263ffffffff169052565b5060408101516040870152606081015160608701526080810151608087015260a081015161014060a0880152610951610140880182610883565b905060c082015187820360c089015261096a8282610883565b91505060e082015160e0880152610100820151610100880152610120820151915061099a61012088018315159052565b95505060209384019391909101906001016108e3565b50929695505050505050565b5f5f604083850312156109cd575f5ffd5b50508035926020909101359150565b634e487b7160e01b5f52604160045260245ffd5b604051610140810167ffffffffffffffff81118282101715610a1457610a146109dc565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610a4357610a436109dc565b604052919050565b803563ffffffff81168114610a5e575f5ffd5b919050565b5f82601f830112610a72575f5ffd5b813567ffffffffffffffff811115610a8c57610a8c6109dc565b8060051b610a9c60208201610a1a565b91825260208185018101929081019086841115610ab7575f5ffd5b6020860192505b83831015610ad9578235825260209283019290910190610abe565b9695505050505050565b80358015158114610a5e575f5ffd5b5f5f5f60608486031215610b04575f5ffd5b83359250602084013567ffffffffffffffff811115610b21575f5ffd5b84016101408187031215610b33575f5ffd5b610b3b6109f0565b610b4482610a4b565b8152610b5260208301610a4b565b602082015260408281013590820152606080830135908201526080808301359082015260a082013567ffffffffffffffff811115610b8e575f5ffd5b610b9a88828501610a63565b60a08301525060c082013567ffffffffffffffff811115610bb9575f5ffd5b610bc588828501610a63565b60c08301525060e082810135908201526101008083013590820152610bed6101208301610ae3565b61012082015293969395505050506040919091013590565b634e487b7160e01b5f52603260045260245ffd5b634e487b7160e01b5f52601160045260245ffd5b5f60018201610c3e57610c3e610c19565b5060010190565b8082018082111561009f5761009f610c1956fea26469706673582212206961babbded6a4e109200370cb97510f17442b7846a4c6b5b279d088059a754d64736f6c634300081c0033";

type SalesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SalesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Sales__factory extends ContractFactory {
  constructor(...args: SalesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Sales> {
    return super.deploy(overrides || {}) as Promise<Sales>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Sales {
    return super.attach(address) as Sales;
  }
  override connect(signer: Signer): Sales__factory {
    return super.connect(signer) as Sales__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SalesInterface {
    return new utils.Interface(_abi) as SalesInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Sales {
    return new Contract(address, _abi, signerOrProvider) as Sales;
  }
}
