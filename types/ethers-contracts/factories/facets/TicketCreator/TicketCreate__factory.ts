/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TicketCreate,
  TicketCreateInterface,
} from "../../../facets/TicketCreator/TicketCreate";

const _abi = [
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint192",
        name: "",
        type: "uint192",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct TicketCreate.TicketMeta",
        name: "",
        type: "tuple",
      },
    ],
    name: "TicketsCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "setExpireable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192",
        name: "_amount",
        type: "uint192",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct TicketCreate.TicketMeta",
        name: "_ticketMeta",
        type: "tuple",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "maxTransfers",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isActive",
                type: "bool",
              },
            ],
            internalType: "struct LibERC1155TransferConstraints.TransferLimit",
            name: "transferLimit",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "LibMembers.rank",
                name: "minimumRank",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isActive",
                type: "bool",
              },
            ],
            internalType:
              "struct LibERC1155TransferConstraints.MemberRankDependency",
            name: "memberRankDependency",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "expireTime",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isActive",
                type: "bool",
              },
            ],
            internalType: "struct LibERC1155TransferConstraints.Expireable",
            name: "expireable",
            type: "tuple",
          },
        ],
        internalType: "struct LibERC1155TransferConstraints.Constraints",
        name: "_constraints",
        type: "tuple",
      },
    ],
    name: "ticketCreate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint192[]",
        name: "_amount",
        type: "uint192[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
        ],
        internalType: "struct TicketCreate.TicketMeta[]",
        name: "_ticketMeta",
        type: "tuple[]",
      },
      {
        components: [
          {
            components: [
              {
                internalType: "uint256",
                name: "maxTransfers",
                type: "uint256",
              },
              {
                internalType: "bool",
                name: "isActive",
                type: "bool",
              },
            ],
            internalType: "struct LibERC1155TransferConstraints.TransferLimit",
            name: "transferLimit",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "LibMembers.rank",
                name: "minimumRank",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isActive",
                type: "bool",
              },
            ],
            internalType:
              "struct LibERC1155TransferConstraints.MemberRankDependency",
            name: "memberRankDependency",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "uint32",
                name: "expireTime",
                type: "uint32",
              },
              {
                internalType: "bool",
                name: "isActive",
                type: "bool",
              },
            ],
            internalType: "struct LibERC1155TransferConstraints.Expireable",
            name: "expireable",
            type: "tuple",
          },
        ],
        internalType: "struct LibERC1155TransferConstraints.Constraints[]",
        name: "_constraints",
        type: "tuple[]",
      },
    ],
    name: "ticketCreateBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611a90806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80635b5de890146100465780636dca9aab1461006257806386ac55881461007e575b600080fd5b610060600480360381019061005b9190610eec565b61009a565b005b61007c60048036038101906100779190610f5c565b61012c565b005b610098600480360381019061009391906111f5565b61012f565b005b6100a26101ad565b60006100ad8261022b565b90506100eb6100ba610476565b828677ffffffffffffffffffffffffffffffffffffffffffffffff1660405180602001604052806000815250610485565b7fe4e6da51082758fb66388e5b0bc4715fc31533297d352e69b8bcd0e89f8693e681858560405161011e93929190611386565b60405180910390a150505050565b50565b60005b81518110156101a757610194848281518110610151576101506113c4565b5b602002602001015184838151811061016c5761016b6113c4565b5b6020026020010151848481518110610187576101866113c4565b5b602002602001015161009a565b808061019f90611422565b915050610132565b50505050565b6101b5610643565b73ffffffffffffffffffffffffffffffffffffffff166101d3610476565b73ffffffffffffffffffffffffffffffffffffffff1614610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906114c8565b60405180910390fd5b565b600080610236610652565b905060008060008086600001516020015115610253576001841893505b86602001516020015115610268576002841893505b8660400151602001511561027d576004841893505b8460030160008567ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060009054906101000a900477ffffffffffffffffffffffffffffffffffffffffffffffff1692506001836102da91906114e8565b915078010000000000000000000000000000000000000000000000008467ffffffffffffffff1661030b9190611536565b8277ffffffffffffffffffffffffffffffffffffffffffffffff166103309190611590565b9050818560030160008667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060006101000a81548177ffffffffffffffffffffffffffffffffffffffffffffffff021916908377ffffffffffffffffffffffffffffffffffffffffffffffff160217905550866000015160200151156103d357866000015160000151856000016000838152602001908152602001600020819055505b8660200151602001511561041e5786602001516000015185600101600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b866040015160200151156104695786604001516000015185600201600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff1602179055505b8095505050505050919050565b600061048061067f565b905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156104f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ec90611658565b60405180910390fd5b60006104ff6106b6565b9050600061050b610476565b90506000610518866106e3565b90506000610525866106e3565b90508584600001600089815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105899190611590565b92505081905550858460030160008282546105a49190611590565b925050819055508773ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628a8a604051610622929190611678565b60405180910390a46106398360008a8a8a8a61075d565b5050505050505050565b600061064d61097e565b905090565b6000807f7a8949a66712f1d1ae515adbd4b0835db540861dfc3638f5ebc928c2d0736d2490508091505090565b6000601460003690501015801561069b575061069a336109b1565b5b156106af57601436033560601c90506106b3565b3390505b90565b6000807f6469616d6f6e642e73746f726167652e6572633131353500000000000000000090508091505090565b60606000600167ffffffffffffffff81111561070257610701610b00565b5b6040519080825280602002602001820160405280156107305781602001602082028036833780820191505090505b5090508281600081518110610748576107476113c4565b5b60200260200101818152505080915050919050565b61077c8473ffffffffffffffffffffffffffffffffffffffff16610a19565b15610975573073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156107ba57610976565b8373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b81526004016107fb959493929190611737565b602060405180830381600087803b15801561081557600080fd5b505af192505050801561084657506040513d601f19601f8201168201806040525081019061084391906117e9565b60015b6108ec57610852611823565b806308c379a014156108af5750610867611845565b8061087257506108b1565b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a69190611914565b60405180910390fd5b505b6040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e3906119a8565b60405180910390fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614610973576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096a90611a3a565b60405180910390fd5b505b5b505050505050565b6000610988610a2c565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000806109bc610a59565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614915050919050565b600080823b905060008111915050919050565b6000807fd00049dc7109015045860694acecd3dc33338404aaf6e55a1c98a2bf41477b8590508091505090565b6000807f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca9777690508091505090565b6000604051905090565b600080fd5b600080fd5b600077ffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b610ac781610a9a565b8114610ad257600080fd5b50565b600081359050610ae481610abe565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b3882610aef565b810181811067ffffffffffffffff82111715610b5757610b56610b00565b5b80604052505050565b6000610b6a610a86565b9050610b768282610b2f565b919050565b600080fd5b600080fd5b600080fd5b600067ffffffffffffffff821115610ba557610ba4610b00565b5b610bae82610aef565b9050602081019050919050565b82818337600083830152505050565b6000610bdd610bd884610b8a565b610b60565b905082815260208101848484011115610bf957610bf8610b85565b5b610c04848285610bbb565b509392505050565b600082601f830112610c2157610c20610b80565b5b8135610c31848260208601610bca565b91505092915050565b600060408284031215610c5057610c4f610aea565b5b610c5a6040610b60565b9050600082013567ffffffffffffffff811115610c7a57610c79610b7b565b5b610c8684828501610c0c565b600083015250602082013567ffffffffffffffff811115610caa57610ca9610b7b565b5b610cb684828501610c0c565b60208301525092915050565b6000819050919050565b610cd581610cc2565b8114610ce057600080fd5b50565b600081359050610cf281610ccc565b92915050565b60008115159050919050565b610d0d81610cf8565b8114610d1857600080fd5b50565b600081359050610d2a81610d04565b92915050565b600060408284031215610d4657610d45610aea565b5b610d506040610b60565b90506000610d6084828501610ce3565b6000830152506020610d7484828501610d1b565b60208301525092915050565b600063ffffffff82169050919050565b610d9981610d80565b8114610da457600080fd5b50565b600081359050610db681610d90565b92915050565b600060408284031215610dd257610dd1610aea565b5b610ddc6040610b60565b90506000610dec84828501610da7565b6000830152506020610e0084828501610d1b565b60208301525092915050565b610e1581610d80565b8114610e2057600080fd5b50565b600081359050610e3281610e0c565b92915050565b600060408284031215610e4e57610e4d610aea565b5b610e586040610b60565b90506000610e6884828501610e23565b6000830152506020610e7c84828501610d1b565b60208301525092915050565b600060c08284031215610e9e57610e9d610aea565b5b610ea86060610b60565b90506000610eb884828501610d30565b6000830152506040610ecc84828501610dbc565b6020830152506080610ee084828501610e38565b60408301525092915050565b60008060006101008486031215610f0657610f05610a90565b5b6000610f1486828701610ad5565b935050602084013567ffffffffffffffff811115610f3557610f34610a95565b5b610f4186828701610c3a565b9250506040610f5286828701610e88565b9150509250925092565b600060208284031215610f7257610f71610a90565b5b6000610f8084828501610ce3565b91505092915050565b600067ffffffffffffffff821115610fa457610fa3610b00565b5b602082029050602081019050919050565b600080fd5b6000610fcd610fc884610f89565b610b60565b90508083825260208201905060208402830185811115610ff057610fef610fb5565b5b835b8181101561101957806110058882610ad5565b845260208401935050602081019050610ff2565b5050509392505050565b600082601f83011261103857611037610b80565b5b8135611048848260208601610fba565b91505092915050565b600067ffffffffffffffff82111561106c5761106b610b00565b5b602082029050602081019050919050565b600061109061108b84611051565b610b60565b905080838252602082019050602084028301858111156110b3576110b2610fb5565b5b835b818110156110fa57803567ffffffffffffffff8111156110d8576110d7610b80565b5b8086016110e58982610c3a565b855260208501945050506020810190506110b5565b5050509392505050565b600082601f83011261111957611118610b80565b5b813561112984826020860161107d565b91505092915050565b600067ffffffffffffffff82111561114d5761114c610b00565b5b602082029050602081019050919050565b600061117161116c84611132565b610b60565b90508083825260208201905060c0840283018581111561119457611193610fb5565b5b835b818110156111bd57806111a98882610e88565b84526020840193505060c081019050611196565b5050509392505050565b600082601f8301126111dc576111db610b80565b5b81356111ec84826020860161115e565b91505092915050565b60008060006060848603121561120e5761120d610a90565b5b600084013567ffffffffffffffff81111561122c5761122b610a95565b5b61123886828701611023565b935050602084013567ffffffffffffffff81111561125957611258610a95565b5b61126586828701611104565b925050604084013567ffffffffffffffff81111561128657611285610a95565b5b611292868287016111c7565b9150509250925092565b6112a581610cc2565b82525050565b6112b481610a9a565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156112f45780820151818401526020810190506112d9565b83811115611303576000848401525b50505050565b6000611314826112ba565b61131e81856112c5565b935061132e8185602086016112d6565b61133781610aef565b840191505092915050565b6000604083016000830151848203600086015261135f8282611309565b915050602083015184820360208601526113798282611309565b9150508091505092915050565b600060608201905061139b600083018661129c565b6113a860208301856112ab565b81810360408301526113ba8184611342565b9050949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061142d82610cc2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156114605761145f6113f3565b5b600182019050919050565b600082825260208201905092915050565b7f4d757374206265207468652045636f73797374656d206f776e65720000000000600082015250565b60006114b2601b8361146b565b91506114bd8261147c565b602082019050919050565b600060208201905081810360008301526114e1816114a5565b9050919050565b60006114f382610a9a565b91506114fe83610a9a565b92508277ffffffffffffffffffffffffffffffffffffffffffffffff0382111561152b5761152a6113f3565b5b828201905092915050565b600061154182610cc2565b915061154c83610cc2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611585576115846113f3565b5b828202905092915050565b600061159b82610cc2565b91506115a683610cc2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115db576115da6113f3565b5b828201905092915050565b7f455243313135353a206d696e7420746f20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061164260218361146b565b915061164d826115e6565b604082019050919050565b6000602082019050818103600083015261167181611635565b9050919050565b600060408201905061168d600083018561129c565b61169a602083018461129c565b9392505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116cc826116a1565b9050919050565b6116dc816116c1565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611709826116e2565b61171381856116ed565b93506117238185602086016112d6565b61172c81610aef565b840191505092915050565b600060a08201905061174c60008301886116d3565b61175960208301876116d3565b611766604083018661129c565b611773606083018561129c565b818103608083015261178581846116fe565b90509695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6117c681611791565b81146117d157600080fd5b50565b6000815190506117e3816117bd565b92915050565b6000602082840312156117ff576117fe610a90565b5b600061180d848285016117d4565b91505092915050565b60008160e01c9050919050565b600060033d11156118425760046000803e61183f600051611816565b90505b90565b600060443d1015611855576118d8565b61185d610a86565b60043d036004823e80513d602482011167ffffffffffffffff821117156118855750506118d8565b808201805167ffffffffffffffff8111156118a357505050506118d8565b80602083010160043d0385018111156118c05750505050506118d8565b6118cf82602001850186610b2f565b82955050505050505b90565b60006118e6826112ba565b6118f0818561146b565b93506119008185602086016112d6565b61190981610aef565b840191505092915050565b6000602082019050818103600083015261192e81846118db565b905092915050565b7f455243313135353a207472616e7366657220746f206e6f6e2d4552433131353560008201527f526563656976657220696d706c656d656e746572000000000000000000000000602082015250565b600061199260348361146b565b915061199d82611936565b604082019050919050565b600060208201905081810360008301526119c181611985565b9050919050565b7f455243313135353a204552433131353552656365697665722072656a6563746560008201527f6420746f6b656e73000000000000000000000000000000000000000000000000602082015250565b6000611a2460288361146b565b9150611a2f826119c8565b604082019050919050565b60006020820190508181036000830152611a5381611a17565b905091905056fea2646970667358221220d6ce2f997833aaa96ecddb5a296a70c6d1e7e2d637cc0739e613bedb9ffb63a864736f6c63430008090033";

type TicketCreateConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TicketCreateConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TicketCreate__factory extends ContractFactory {
  constructor(...args: TicketCreateConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TicketCreate> {
    return super.deploy(overrides || {}) as Promise<TicketCreate>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TicketCreate {
    return super.attach(address) as TicketCreate;
  }
  override connect(signer: Signer): TicketCreate__factory {
    return super.connect(signer) as TicketCreate__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TicketCreateInterface {
    return new utils.Interface(_abi) as TicketCreateInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TicketCreate {
    return new Contract(address, _abi, signerOrProvider) as TicketCreate;
  }
}
