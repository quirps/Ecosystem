/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Moderator,
  ModeratorInterface,
} from "../../../facets/Moderator/Moderator";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_moderator",
        type: "address",
      },
    ],
    name: "getModeratorRank",
    outputs: [
      {
        internalType: "uint8",
        name: "moderatorRank_",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_moderator",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "_rank",
        type: "uint8",
      },
    ],
    name: "setModeratorRank",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_moderators",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "_ranks",
        type: "uint8[]",
      },
    ],
    name: "setModeratorRanks",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b506104418061001c5f395ff3fe608060405234801561000f575f5ffd5b506004361061003f575f3560e01c806314d704e414610043578063a3be143314610058578063dec18b141461006b575b5f5ffd5b61005661005136600461020a565b6100cb565b005b610056610066366004610314565b6100d9565b6100b56100793660046103d7565b6001600160a01b03165f9081527f8c2c577630c40136bcc18deb16687d093146d4bb8d4918e4af706e0bd8cb0865602052604090205460ff1690565b60405160ff909116815260200160405180910390f35b6100d58282610194565b5050565b80518251146101405760405162461bcd60e51b815260206004820152602960248201527f4d6f64657261746f727320616e642072616e6b73206d7573742062652073616d60448201526832903632b733ba341760b91b606482015260840160405180910390fd5b5f5b825181101561018f57610187838281518110610160576101606103f7565b602002602001015183838151811061017a5761017a6103f7565b6020026020010151610194565b600101610142565b505050565b6001600160a01b03919091165f9081527f8c2c577630c40136bcc18deb16687d093146d4bb8d4918e4af706e0bd8cb086560205260409020805460ff191660ff909216919091179055565b80356001600160a01b03811681146101f5575f5ffd5b919050565b803560ff811681146101f5575f5ffd5b5f5f6040838503121561021b575f5ffd5b610224836101df565b9150610232602084016101fa565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff811182821017156102785761027861023b565b604052919050565b5f67ffffffffffffffff8211156102995761029961023b565b5060051b60200190565b5f82601f8301126102b2575f5ffd5b81356102c56102c082610280565b61024f565b8082825260208201915060208360051b8601019250858311156102e6575f5ffd5b602085015b8381101561030a576102fc816101fa565b8352602092830192016102eb565b5095945050505050565b5f5f60408385031215610325575f5ffd5b823567ffffffffffffffff81111561033b575f5ffd5b8301601f8101851361034b575f5ffd5b80356103596102c082610280565b8082825260208201915060208360051b85010192508783111561037a575f5ffd5b6020840193505b828410156103a357610392846101df565b825260209384019390910190610381565b9450505050602083013567ffffffffffffffff8111156103c1575f5ffd5b6103cd858286016102a3565b9150509250929050565b5f602082840312156103e7575f5ffd5b6103f0826101df565b9392505050565b634e487b7160e01b5f52603260045260245ffdfea2646970667358221220e545e1fac1179176b830b0a96f3536b28806fdc3bbd97b85ccd81be0b02c156d64736f6c634300081c0033";

type ModeratorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ModeratorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Moderator__factory extends ContractFactory {
  constructor(...args: ModeratorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Moderator> {
    return super.deploy(overrides || {}) as Promise<Moderator>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Moderator {
    return super.attach(address) as Moderator;
  }
  override connect(signer: Signer): Moderator__factory {
    return super.connect(signer) as Moderator__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ModeratorInterface {
    return new utils.Interface(_abi) as ModeratorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Moderator {
    return new Contract(address, _abi, signerOrProvider) as Moderator;
  }
}
