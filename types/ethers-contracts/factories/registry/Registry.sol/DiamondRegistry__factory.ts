/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  DiamondRegistry,
  DiamondRegistryInterface,
} from "../../../registry/Registry.sol/DiamondRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_diamondDeployAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ecosystem",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
    ],
    name: "EcosystemDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "newVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ecosystemOwner",
        type: "address",
      },
    ],
    name: "VersionUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
    ],
    name: "VersionUploaded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "diamondBytecode",
        type: "bytes",
      },
    ],
    name: "deployVersion",
    outputs: [
      {
        internalType: "address",
        name: "deployedAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ecosystemsOwner",
        type: "address",
      },
    ],
    name: "getUserEcosystems",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "ecosytemAddress",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "versionNumber",
            type: "bytes32",
          },
        ],
        internalType: "struct DiamondRegistry.Ecosystem[]",
        name: "ecosystems_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
    ],
    name: "getVersion",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "uploadedTimestamp",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "facetAddress",
                type: "address",
              },
              {
                internalType: "enum IDiamondCut.FacetCutAction",
                name: "action",
                type: "uint8",
              },
              {
                internalType: "bytes4[]",
                name: "functionSelectors",
                type: "bytes4[]",
              },
            ],
            internalType: "struct IDiamondCut.FacetCut[]",
            name: "facetCuts",
            type: "tuple[]",
          },
        ],
        internalType: "struct DiamondRegistry.Version",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint240",
        name: "mainVersion",
        type: "uint240",
      },
      {
        internalType: "bytes2",
        name: "optimizationType",
        type: "bytes2",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "registerOptimizationFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "facetCuts",
        type: "tuple[]",
      },
    ],
    name: "uploadVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "versions",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "uploadedTimestamp",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b50604051620026ed380380620026ed833981810160405281019062000037919062000226565b62000047620000c160201b60201c565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000258565b6000620000d8620000dd60201b62000acc1760201c565b905090565b6000601460003690501015801562000102575062000101336200011f60201b60201c565b5b156200011857601436033560601c90506200011c565b3390505b90565b600080620001326200018f60201b60201c565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614915050919050565b6000807f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca9777690508091505090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ee82620001c1565b9050919050565b6200020081620001e1565b81146200020c57600080fd5b50565b6000815190506200022081620001f5565b92915050565b6000602082840312156200023f576200023e620001bc565b5b60006200024f848285016200020f565b91505092915050565b6080516124796200027460003960006105ca01526124796000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639aaf9f081161005b5780639aaf9f08146100ec578063b0c476ac1461011c578063c7cec7f81461014c578063ef9cbb6c1461017d5761007d565b806305de0906146100825780638da5cb5b1461009e57806399811aaa146100bc575b600080fd5b61009c60048036038101906100979190610f97565b610199565b005b6100a661019f565b6040516100b39190611077565b60405180910390f35b6100d660048036038101906100d191906110be565b6101c3565b6040516100e391906112ad565b60405180910390f35b610106600480360381019061010191906112fb565b610353565b6040516101139190611625565b60405180910390f35b6101366004803603810190610131919061171e565b61054b565b6040516101439190611077565b60405180910390f35b610166600480360381019061016191906112fb565b6107d9565b6040516101749291906117db565b60405180910390f35b61019760048036038101906101929190611a88565b61081a565b005b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610348578382906000526020600020906003020160405180606001604052908160008201805461025790611b13565b80601f016020809104026020016040519081016040528092919081815260200182805461028390611b13565b80156102d05780601f106102a5576101008083540402835291602001916102d0565b820191906000526020600020905b8154815290600101906020018083116102b357829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152505081526020019060010190610224565b505050509050919050565b61035b610c16565b600160008381526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201805480602002602001604051908101604052809291908181526020016000905b8282101561053c57838290600052602060002090600202016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16600281111561047d5761047c61138e565b5b600281111561048f5761048e61138e565b5b81526020016001820180548060200260200160405190810160405280929190818152602001828054801561052457602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104d15790505b505050505081525050815260200190600101906103df565b50505050815250509050919050565b6000806001600087815260200190815260200160002060000160009054906101000a900460ff166105b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a890611bc8565b60405180910390fd5b60006001600088815260200190815260200160002090507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f4615e3b61060c610b03565b8787856001016040518563ffffffff1660e01b815260040161063194939291906121a8565b602060405180830381600087803b15801561064b57600080fd5b505af115801561065f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106839190612210565b9150600060405180606001604052808881526020018473ffffffffffffffffffffffffffffffffffffffff168152602001898152509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001908051906020019061073f929190610c3f565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550507fdeb2f2874d3841d76662cf002f5cdfa8e0d39834a11ebbc67e53ee88af6f5e1f33858a6040516107c69392919061224c565b60405180910390a1505050949350505050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900463ffffffff16905082565b610822610b12565b73ffffffffffffffffffffffffffffffffffffffff16610840610b03565b505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610881610b03565b73ffffffffffffffffffffffffffffffffffffffff16146108d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108ce906122f5565b60405180910390fd5b6001600083815260200190815260200160002060000160009054906101000a900460ff161561093b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093290612361565b60405180910390fd5b6000600160008481526020019081526020016000209050428160000160016101000a81548163ffffffff021916908363ffffffff16021790555060018160000160006101000a81548160ff02191690831515021790555060005b8251811015610a8f57816001018382815181106109b5576109b4612381565b5b6020026020010151908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836002811115610a5857610a5761138e565b5b02179055506040820151816001019080519060200190610a79929190610cc5565b5050508080610a87906123df565b915050610995565b507f069531cbe027c42df80b5214535d631fc9ba056f8aa436132b6c229a2b08e90e83604051610abf9190612428565b60405180910390a1505050565b60006014600036905010158015610ae85750610ae733610b21565b5b15610afc57601436033560601c9050610b00565b3390505b90565b6000610b0d610acc565b905090565b6000610b1c610b89565b905090565b600080610b2c610bbc565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614915050919050565b6000610b93610be9565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000807f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca9777690508091505090565b6000807fd00049dc7109015045860694acecd3dc33338404aaf6e55a1c98a2bf41477b8590508091505090565b6040518060600160405280600015158152602001600063ffffffff168152602001606081525090565b828054610c4b90611b13565b90600052602060002090601f016020900481019282610c6d5760008555610cb4565b82601f10610c8657805160ff1916838001178555610cb4565b82800160010185558215610cb4579182015b82811115610cb3578251825591602001919060010190610c98565b5b509050610cc19190610d72565b5090565b82805482825590600052602060002090600701600890048101928215610d615791602002820160005b83821115610d2f57835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610cee565b8015610d5f5782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610d2f565b505b509050610d6e9190610d72565b5090565b5b80821115610d8b576000816000905550600101610d73565b5090565b6000604051905090565b600080fd5b600080fd5b60007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b610dd681610da3565b8114610de157600080fd5b50565b600081359050610df381610dcd565b92915050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b610e2e81610df9565b8114610e3957600080fd5b50565b600081359050610e4b81610e25565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610ea482610e5b565b810181811067ffffffffffffffff82111715610ec357610ec2610e6c565b5b80604052505050565b6000610ed6610d8f565b9050610ee28282610e9b565b919050565b600067ffffffffffffffff821115610f0257610f01610e6c565b5b610f0b82610e5b565b9050602081019050919050565b82818337600083830152505050565b6000610f3a610f3584610ee7565b610ecc565b905082815260208101848484011115610f5657610f55610e56565b5b610f61848285610f18565b509392505050565b600082601f830112610f7e57610f7d610e51565b5b8135610f8e848260208601610f27565b91505092915050565b60008060008060808587031215610fb157610fb0610d99565b5b6000610fbf87828801610de4565b9450506020610fd087828801610e3c565b935050604085013567ffffffffffffffff811115610ff157610ff0610d9e565b5b610ffd87828801610f69565b925050606085013567ffffffffffffffff81111561101e5761101d610d9e565b5b61102a87828801610f69565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061106182611036565b9050919050565b61107181611056565b82525050565b600060208201905061108c6000830184611068565b92915050565b61109b81611056565b81146110a657600080fd5b50565b6000813590506110b881611092565b92915050565b6000602082840312156110d4576110d3610d99565b5b60006110e2848285016110a9565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611151578082015181840152602081019050611136565b83811115611160576000848401525b50505050565b600061117182611117565b61117b8185611122565b935061118b818560208601611133565b61119481610e5b565b840191505092915050565b6111a881611056565b82525050565b6000819050919050565b6111c1816111ae565b82525050565b600060608301600083015184820360008601526111e48282611166565b91505060208301516111f9602086018261119f565b50604083015161120c60408601826111b8565b508091505092915050565b600061122383836111c7565b905092915050565b6000602082019050919050565b6000611243826110eb565b61124d81856110f6565b93508360208202850161125f85611107565b8060005b8581101561129b578484038952815161127c8582611217565b94506112878361122b565b925060208a01995050600181019050611263565b50829750879550505050505092915050565b600060208201905081810360008301526112c78184611238565b905092915050565b6112d8816111ae565b81146112e357600080fd5b50565b6000813590506112f5816112cf565b92915050565b60006020828403121561131157611310610d99565b5b600061131f848285016112e6565b91505092915050565b60008115159050919050565b61133d81611328565b82525050565b600063ffffffff82169050919050565b61135c81611343565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106113ce576113cd61138e565b5b50565b60008190506113df826113bd565b919050565b60006113ef826113d1565b9050919050565b6113ff816113e4565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61146681611431565b82525050565b6000611478838361145d565b60208301905092915050565b6000602082019050919050565b600061149c82611405565b6114a68185611410565b93506114b183611421565b8060005b838110156114e25781516114c9888261146c565b97506114d483611484565b9250506001810190506114b5565b5085935050505092915050565b6000606083016000830151611507600086018261119f565b50602083015161151a60208601826113f6565b50604083015184820360408601526115328282611491565b9150508091505092915050565b600061154b83836114ef565b905092915050565b6000602082019050919050565b600061156b82611362565b611575818561136d565b9350836020820285016115878561137e565b8060005b858110156115c357848403895281516115a4858261153f565b94506115af83611553565b925060208a0199505060018101905061158b565b50829750879550505050505092915050565b60006060830160008301516115ed6000860182611334565b5060208301516116006020860182611353565b50604083015184820360408601526116188282611560565b9150508091505092915050565b6000602082019050818103600083015261163f81846115d5565b905092915050565b600067ffffffffffffffff82111561166257611661610e6c565b5b61166b82610e5b565b9050602081019050919050565b600061168b61168684611647565b610ecc565b9050828152602081018484840111156116a7576116a6610e56565b5b6116b2848285610f18565b509392505050565b600082601f8301126116cf576116ce610e51565b5b81356116df848260208601611678565b91505092915050565b6000819050919050565b6116fb816116e8565b811461170657600080fd5b50565b600081359050611718816116f2565b92915050565b6000806000806080858703121561173857611737610d99565b5b6000611746878288016112e6565b945050602085013567ffffffffffffffff81111561176757611766610d9e565b5b611773878288016116ba565b935050604061178487828801611709565b925050606085013567ffffffffffffffff8111156117a5576117a4610d9e565b5b6117b187828801610f69565b91505092959194509250565b6117c681611328565b82525050565b6117d581611343565b82525050565b60006040820190506117f060008301856117bd565b6117fd60208301846117cc565b9392505050565b600067ffffffffffffffff82111561181f5761181e610e6c565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b6003811061184c57600080fd5b50565b60008135905061185e8161183f565b92915050565b600067ffffffffffffffff82111561187f5761187e610e6c565b5b602082029050602081019050919050565b61189981611431565b81146118a457600080fd5b50565b6000813590506118b681611890565b92915050565b60006118cf6118ca84611864565b610ecc565b905080838252602082019050602084028301858111156118f2576118f1611830565b5b835b8181101561191b578061190788826118a7565b8452602084019350506020810190506118f4565b5050509392505050565b600082601f83011261193a57611939610e51565b5b813561194a8482602086016118bc565b91505092915050565b60006060828403121561196957611968611835565b5b6119736060610ecc565b90506000611983848285016110a9565b60008301525060206119978482850161184f565b602083015250604082013567ffffffffffffffff8111156119bb576119ba61183a565b5b6119c784828501611925565b60408301525092915050565b60006119e66119e184611804565b610ecc565b90508083825260208201905060208402830185811115611a0957611a08611830565b5b835b81811015611a5057803567ffffffffffffffff811115611a2e57611a2d610e51565b5b808601611a3b8982611953565b85526020850194505050602081019050611a0b565b5050509392505050565b600082601f830112611a6f57611a6e610e51565b5b8135611a7f8482602086016119d3565b91505092915050565b60008060408385031215611a9f57611a9e610d99565b5b6000611aad858286016112e6565b925050602083013567ffffffffffffffff811115611ace57611acd610d9e565b5b611ada85828601611a5a565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611b2b57607f821691505b60208210811415611b3f57611b3e611ae4565b5b50919050565b600082825260208201905092915050565b7f56657273696f6e206973206e6f742076616c6964206f72206e6f74206163746960008201527f7665000000000000000000000000000000000000000000000000000000000000602082015250565b6000611bb2602283611b45565b9150611bbd82611b56565b604082019050919050565b60006020820190508181036000830152611be181611ba5565b9050919050565b611bf1816116e8565b82525050565b600081519050919050565b600082825260208201905092915050565b6000611c1e82611bf7565b611c288185611c02565b9350611c38818560208601611133565b611c4181610e5b565b840191505092915050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611cbd611cb883611c7d565b611c8a565b9050919050565b60008160a01c9050919050565b600060ff82169050919050565b6000611cf1611cec83611cc4565b611cd1565b9050919050565b600081549050919050565b60008190508160005260206000209050919050565b60008160e01b9050919050565b6000611d3082611d18565b9050919050565b6000611d4a611d4583611c7d565b611d25565b9050919050565b60008160201c9050919050565b6000611d71611d6c83611d51565b611d25565b9050919050565b60008160401c9050919050565b6000611d98611d9383611d78565b611d25565b9050919050565b60008160601c9050919050565b6000611dbf611dba83611d9f565b611d25565b9050919050565b60008160801c9050919050565b6000611de6611de183611dc6565b611d25565b9050919050565b6000611e00611dfb83611cc4565b611d25565b9050919050565b60008160c01c9050919050565b6000611e27611e2283611e07565b611d25565b9050919050565b60008160e01c9050919050565b6000611e4e611e4983611e2e565b611d25565b9050919050565b6000611e6082611cf8565b611e6a8185611410565b935083611e7684611d03565b6000600115611f63575b83600160080382011015611f62578154611ea288611e9d83611d37565b61145d565b602088019750611eba88611eb583611d5e565b61145d565b602088019750611ed288611ecd83611d85565b61145d565b602088019750611eea88611ee583611dac565b61145d565b602088019750611f0288611efd83611dd3565b61145d565b602088019750611f1a88611f1583611ded565b61145d565b602088019750611f3288611f2d83611e14565b61145d565b602088019750611f4a88611f4583611e3b565b61145d565b60208801975060018301925050600881019050611e80565b5b6001156120a657815484821015611f9357611f8688611f8183611d37565b61145d565b6020880197506001820191505b84821015611fba57611fad88611fa883611d5e565b61145d565b6020880197506001820191505b84821015611fe157611fd488611fcf83611d85565b61145d565b6020880197506001820191505b8482101561200857611ffb88611ff683611dac565b61145d565b6020880197506001820191505b8482101561202f576120228861201d83611dd3565b61145d565b6020880197506001820191505b84821015612056576120498861204483611ded565b61145d565b6020880197506001820191505b8482101561207d576120708861206b83611e14565b61145d565b6020880197506001820191505b848210156120a4576120978861209283611e3b565b61145d565b6020880197506001820191505b505b8694505050505092915050565b60006060830160008084015490506120ca81611caa565b6120d7600087018261119f565b506120e181611cde565b6120ee60208701826113f6565b506001840185830360408701526121058382611e55565b925050819250505092915050565b600061211f83836120b3565b905092915050565b6000600282019050919050565b600061213f82611c4c565b6121498185611c57565b93508360208202850161215b85611c68565b8060005b85811015612196578484038952816121778582612113565b945061218283612127565b925060208a0199505060018101905061215f565b50829750879550505050505092915050565b60006080820190506121bd6000830187611068565b6121ca6020830186611be8565b81810360408301526121dc8185611c13565b905081810360608301526121f08184612134565b905095945050505050565b60008151905061220a81611092565b92915050565b60006020828403121561222657612225610d99565b5b6000612234848285016121fb565b91505092915050565b612246816111ae565b82525050565b60006060820190506122616000830186611068565b61226e6020830185611068565b61227b604083018461223d565b949350505050565b7f4f6e6c7920746865206f776e6572206d61792075706c6f6164206e657720656360008201527f6f73797374656d2076657273696f6e732e000000000000000000000000000000602082015250565b60006122df603183611b45565b91506122ea82612283565b604082019050919050565b6000602082019050818103600083015261230e816122d2565b9050919050565b7f56657273696f6e20616c72656164792065786973747300000000000000000000600082015250565b600061234b601683611b45565b915061235682612315565b602082019050919050565b6000602082019050818103600083015261237a8161233e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006123ea826116e8565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561241d5761241c6123b0565b5b600182019050919050565b600060208201905061243d600083018461223d565b9291505056fea26469706673582212204849493ba5788cbec1ca7f83ec79089d9f8be49b7d482c0bc057e391682115ea64736f6c63430008090033";

type DiamondRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DiamondRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DiamondRegistry__factory extends ContractFactory {
  constructor(...args: DiamondRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _diamondDeployAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DiamondRegistry> {
    return super.deploy(
      _diamondDeployAddress,
      overrides || {}
    ) as Promise<DiamondRegistry>;
  }
  override getDeployTransaction(
    _diamondDeployAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_diamondDeployAddress, overrides || {});
  }
  override attach(address: string): DiamondRegistry {
    return super.attach(address) as DiamondRegistry;
  }
  override connect(signer: Signer): DiamondRegistry__factory {
    return super.connect(signer) as DiamondRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DiamondRegistryInterface {
    return new utils.Interface(_abi) as DiamondRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DiamondRegistry {
    return new Contract(address, _abi, signerOrProvider) as DiamondRegistry;
  }
}
