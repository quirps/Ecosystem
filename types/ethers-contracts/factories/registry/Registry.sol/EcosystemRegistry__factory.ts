/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EcosystemRegistry,
  EcosystemRegistryInterface,
} from "../../../registry/Registry.sol/EcosystemRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_diamondDeployAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ecosystem",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
    ],
    name: "EcosystemDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "newVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ecosystemOwner",
        type: "address",
      },
    ],
    name: "VersionUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
    ],
    name: "VersionUploaded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "diamondBytecode",
        type: "bytes",
      },
    ],
    name: "deployVersion",
    outputs: [
      {
        internalType: "address",
        name: "ecosystemAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ecosystemsOwner",
        type: "address",
      },
    ],
    name: "getUserEcosystems",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "ecosytemAddress",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "versionNumber",
            type: "bytes32",
          },
        ],
        internalType: "struct EcosystemRegistry.Ecosystem[]",
        name: "ecosystems_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
    ],
    name: "getVersion",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "uploadedTimestamp",
            type: "uint32",
          },
          {
            components: [
              {
                internalType: "address",
                name: "facetAddress",
                type: "address",
              },
              {
                internalType: "enum IDiamondCut.FacetCutAction",
                name: "action",
                type: "uint8",
              },
              {
                internalType: "bytes4[]",
                name: "functionSelectors",
                type: "bytes4[]",
              },
            ],
            internalType: "struct IDiamondCut.FacetCut[]",
            name: "facetCuts",
            type: "tuple[]",
          },
        ],
        internalType: "struct EcosystemRegistry.Version",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint240",
        name: "mainVersion",
        type: "uint240",
      },
      {
        internalType: "bytes2",
        name: "optimizationType",
        type: "bytes2",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "registerOptimizationFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "facetCuts",
        type: "tuple[]",
      },
    ],
    name: "uploadVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "versions",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "uploadedTimestamp",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200286d3803806200286d833981810160405281019062000037919062000226565b62000047620000c160201b60201c565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505062000258565b6000620000d8620000dd60201b62000ace1760201c565b905090565b6000601460003690501015801562000102575062000101336200011f60201b60201c565b5b156200011857601436033560601c90506200011c565b3390505b90565b600080620001326200018f60201b60201c565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614915050919050565b6000807f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca9777690508091505090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ee82620001c1565b9050919050565b6200020081620001e1565b81146200020c57600080fd5b50565b6000815190506200022081620001f5565b92915050565b6000602082840312156200023f576200023e620001bc565b5b60006200024f848285016200020f565b91505092915050565b6080516125f96200027460003960006105c001526125f96000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639aaf9f081161005b5780639aaf9f08146100ec578063b0c476ac1461011c578063c7cec7f81461014c578063ef9cbb6c1461017d5761007d565b806305de0906146100825780638da5cb5b1461009e57806399811aaa146100bc575b600080fd5b61009c60048036038101906100979190611082565b610199565b005b6100a661019f565b6040516100b39190611162565b60405180910390f35b6100d660048036038101906100d191906111a9565b6101c3565b6040516100e39190611398565b60405180910390f35b610106600480360381019061010191906113e6565b610353565b6040516101139190611710565b60405180910390f35b61013660048036038101906101319190611869565b61054b565b6040516101439190611162565b60405180910390f35b610166600480360381019061016191906113e6565b6107db565b60405161017492919061192b565b60405180910390f35b61019760048036038101906101929190611bd3565b61081c565b005b50505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610348578382906000526020600020906003020160405180606001604052908160008201805461025790611c5e565b80601f016020809104026020016040519081016040528092919081815260200182805461028390611c5e565b80156102d05780601f106102a5576101008083540402835291602001916102d0565b820191906000526020600020905b8154815290600101906020018083116102b357829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152505081526020019060010190610224565b505050509050919050565b61035b610cf7565b600160008381526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900463ffffffff1663ffffffff1663ffffffff16815260200160018201805480602002602001604051908101604052809291908181526020016000905b8282101561053c57838290600052602060002090600202016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff16600281111561047d5761047c611479565b5b600281111561048f5761048e611479565b5b81526020016001820180548060200260200160405190810160405280929190818152602001828054801561052457602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104d15790505b505050505081525050815260200190600101906103df565b50505050815250509050919050565b6000806001600088815260200190815260200160002090508060000160009054906101000a900460ff166105b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ab90611d13565b60405180910390fd5b6105be6001610b05565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f4615e3b610602610b9e565b878787866001016040518663ffffffff1660e01b81526004016106299594939291906122dc565b602060405180830381600087803b15801561064357600080fd5b505af1158015610657573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061067b9190612346565b91506106876002610b05565b600060405180606001604052808881526020018473ffffffffffffffffffffffffffffffffffffffff168152602001898152509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000019080519060200190610741929190610d20565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550507fdeb2f2874d3841d76662cf002f5cdfa8e0d39834a11ebbc67e53ee88af6f5e1f33848a6040516107c893929190612382565b60405180910390a1505095945050505050565b60016020528060005260406000206000915090508060000160009054906101000a900460ff16908060000160019054906101000a900463ffffffff16905082565b610824610bad565b73ffffffffffffffffffffffffffffffffffffffff16610842610b9e565b505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610883610b9e565b73ffffffffffffffffffffffffffffffffffffffff16146108d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d09061242b565b60405180910390fd5b6001600083815260200190815260200160002060000160009054906101000a900460ff161561093d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093490612497565b60405180910390fd5b6000600160008481526020019081526020016000209050428160000160016101000a81548163ffffffff021916908363ffffffff16021790555060018160000160006101000a81548160ff02191690831515021790555060005b8251811015610a9157816001018382815181106109b7576109b66124b7565b5b6020026020010151908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff02191690836002811115610a5a57610a59611479565b5b02179055506040820151816001019080519060200190610a7b929190610da6565b5050508080610a8990612515565b915050610997565b507f069531cbe027c42df80b5214535d631fc9ba056f8aa436132b6c229a2b08e90e83604051610ac1919061255e565b60405180910390a1505050565b60006014600036905010158015610aea5750610ae933610bbc565b5b15610afe57601436033560601c9050610b02565b3390505b90565b610b9b81604051602401610b199190612579565b6040516020818303038152906040527ff82c50f1000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610c24565b50565b6000610ba8610ace565b905090565b6000610bb7610c3e565b905090565b600080610bc7610c71565b90508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614915050919050565b610c3b81610c33610c9e610cbf565b63ffffffff16565b50565b6000610c48610cca565b60000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000807f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca9777690508091505090565b60006a636f6e736f6c652e6c6f679050600080835160208501845afa505050565b610e53819050919050565b6000807fd00049dc7109015045860694acecd3dc33338404aaf6e55a1c98a2bf41477b8590508091505090565b6040518060600160405280600015158152602001600063ffffffff168152602001606081525090565b828054610d2c90611c5e565b90600052602060002090601f016020900481019282610d4e5760008555610d95565b82601f10610d6757805160ff1916838001178555610d95565b82800160010185558215610d95579182015b82811115610d94578251825591602001919060010190610d79565b5b509050610da29190610e5d565b5090565b82805482825590600052602060002090600701600890048101928215610e425791602002820160005b83821115610e1057835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610dcf565b8015610e405782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610e10565b505b509050610e4f9190610e5d565b5090565b610e5b612594565b565b5b80821115610e76576000816000905550600101610e5e565b5090565b6000604051905090565b600080fd5b600080fd5b60007dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82169050919050565b610ec181610e8e565b8114610ecc57600080fd5b50565b600081359050610ede81610eb8565b92915050565b60007fffff00000000000000000000000000000000000000000000000000000000000082169050919050565b610f1981610ee4565b8114610f2457600080fd5b50565b600081359050610f3681610f10565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610f8f82610f46565b810181811067ffffffffffffffff82111715610fae57610fad610f57565b5b80604052505050565b6000610fc1610e7a565b9050610fcd8282610f86565b919050565b600067ffffffffffffffff821115610fed57610fec610f57565b5b610ff682610f46565b9050602081019050919050565b82818337600083830152505050565b600061102561102084610fd2565b610fb7565b90508281526020810184848401111561104157611040610f41565b5b61104c848285611003565b509392505050565b600082601f83011261106957611068610f3c565b5b8135611079848260208601611012565b91505092915050565b6000806000806080858703121561109c5761109b610e84565b5b60006110aa87828801610ecf565b94505060206110bb87828801610f27565b935050604085013567ffffffffffffffff8111156110dc576110db610e89565b5b6110e887828801611054565b925050606085013567ffffffffffffffff81111561110957611108610e89565b5b61111587828801611054565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061114c82611121565b9050919050565b61115c81611141565b82525050565b60006020820190506111776000830184611153565b92915050565b61118681611141565b811461119157600080fd5b50565b6000813590506111a38161117d565b92915050565b6000602082840312156111bf576111be610e84565b5b60006111cd84828501611194565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561123c578082015181840152602081019050611221565b8381111561124b576000848401525b50505050565b600061125c82611202565b611266818561120d565b935061127681856020860161121e565b61127f81610f46565b840191505092915050565b61129381611141565b82525050565b6000819050919050565b6112ac81611299565b82525050565b600060608301600083015184820360008601526112cf8282611251565b91505060208301516112e4602086018261128a565b5060408301516112f760408601826112a3565b508091505092915050565b600061130e83836112b2565b905092915050565b6000602082019050919050565b600061132e826111d6565b61133881856111e1565b93508360208202850161134a856111f2565b8060005b8581101561138657848403895281516113678582611302565b945061137283611316565b925060208a0199505060018101905061134e565b50829750879550505050505092915050565b600060208201905081810360008301526113b28184611323565b905092915050565b6113c381611299565b81146113ce57600080fd5b50565b6000813590506113e0816113ba565b92915050565b6000602082840312156113fc576113fb610e84565b5b600061140a848285016113d1565b91505092915050565b60008115159050919050565b61142881611413565b82525050565b600063ffffffff82169050919050565b6114478161142e565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106114b9576114b8611479565b5b50565b60008190506114ca826114a8565b919050565b60006114da826114bc565b9050919050565b6114ea816114cf565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6115518161151c565b82525050565b60006115638383611548565b60208301905092915050565b6000602082019050919050565b6000611587826114f0565b61159181856114fb565b935061159c8361150c565b8060005b838110156115cd5781516115b48882611557565b97506115bf8361156f565b9250506001810190506115a0565b5085935050505092915050565b60006060830160008301516115f2600086018261128a565b50602083015161160560208601826114e1565b506040830151848203604086015261161d828261157c565b9150508091505092915050565b600061163683836115da565b905092915050565b6000602082019050919050565b60006116568261144d565b6116608185611458565b93508360208202850161167285611469565b8060005b858110156116ae578484038952815161168f858261162a565b945061169a8361163e565b925060208a01995050600181019050611676565b50829750879550505050505092915050565b60006060830160008301516116d8600086018261141f565b5060208301516116eb602086018261143e565b5060408301518482036040860152611703828261164b565b9150508091505092915050565b6000602082019050818103600083015261172a81846116c0565b905092915050565b600067ffffffffffffffff82111561174d5761174c610f57565b5b61175682610f46565b9050602081019050919050565b600061177661177184611732565b610fb7565b90508281526020810184848401111561179257611791610f41565b5b61179d848285611003565b509392505050565b600082601f8301126117ba576117b9610f3c565b5b81356117ca848260208601611763565b91505092915050565b6000819050919050565b6117e6816117d3565b81146117f157600080fd5b50565b600081359050611803816117dd565b92915050565b600080fd5b600080fd5b60008083601f84011261182957611828610f3c565b5b8235905067ffffffffffffffff81111561184657611845611809565b5b6020830191508360018202830111156118625761186161180e565b5b9250929050565b60008060008060006080868803121561188557611884610e84565b5b6000611893888289016113d1565b955050602086013567ffffffffffffffff8111156118b4576118b3610e89565b5b6118c0888289016117a5565b94505060406118d1888289016117f4565b935050606086013567ffffffffffffffff8111156118f2576118f1610e89565b5b6118fe88828901611813565b92509250509295509295909350565b61191681611413565b82525050565b6119258161142e565b82525050565b6000604082019050611940600083018561190d565b61194d602083018461191c565b9392505050565b600067ffffffffffffffff82111561196f5761196e610f57565b5b602082029050602081019050919050565b600080fd5b600080fd5b6003811061199757600080fd5b50565b6000813590506119a98161198a565b92915050565b600067ffffffffffffffff8211156119ca576119c9610f57565b5b602082029050602081019050919050565b6119e48161151c565b81146119ef57600080fd5b50565b600081359050611a01816119db565b92915050565b6000611a1a611a15846119af565b610fb7565b90508083825260208201905060208402830185811115611a3d57611a3c61180e565b5b835b81811015611a665780611a5288826119f2565b845260208401935050602081019050611a3f565b5050509392505050565b600082601f830112611a8557611a84610f3c565b5b8135611a95848260208601611a07565b91505092915050565b600060608284031215611ab457611ab3611980565b5b611abe6060610fb7565b90506000611ace84828501611194565b6000830152506020611ae28482850161199a565b602083015250604082013567ffffffffffffffff811115611b0657611b05611985565b5b611b1284828501611a70565b60408301525092915050565b6000611b31611b2c84611954565b610fb7565b90508083825260208201905060208402830185811115611b5457611b5361180e565b5b835b81811015611b9b57803567ffffffffffffffff811115611b7957611b78610f3c565b5b808601611b868982611a9e565b85526020850194505050602081019050611b56565b5050509392505050565b600082601f830112611bba57611bb9610f3c565b5b8135611bca848260208601611b1e565b91505092915050565b60008060408385031215611bea57611be9610e84565b5b6000611bf8858286016113d1565b925050602083013567ffffffffffffffff811115611c1957611c18610e89565b5b611c2585828601611ba5565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c7657607f821691505b60208210811415611c8a57611c89611c2f565b5b50919050565b600082825260208201905092915050565b7f56657273696f6e206973206e6f742076616c6964206f72206e6f74206163746960008201527f7665000000000000000000000000000000000000000000000000000000000000602082015250565b6000611cfd602283611c90565b9150611d0882611ca1565b604082019050919050565b60006020820190508181036000830152611d2c81611cf0565b9050919050565b611d3c816117d3565b82525050565b600082825260208201905092915050565b6000611d5f8385611d42565b9350611d6c838584611003565b611d7583610f46565b840190509392505050565b600081549050919050565b600082825260208201905092915050565b60008190508160005260206000209050919050565b60008160001c9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611df1611dec83611db1565b611dbe565b9050919050565b60008160a01c9050919050565b600060ff82169050919050565b6000611e25611e2083611df8565b611e05565b9050919050565b600081549050919050565b60008190508160005260206000209050919050565b60008160e01b9050919050565b6000611e6482611e4c565b9050919050565b6000611e7e611e7983611db1565b611e59565b9050919050565b60008160201c9050919050565b6000611ea5611ea083611e85565b611e59565b9050919050565b60008160401c9050919050565b6000611ecc611ec783611eac565b611e59565b9050919050565b60008160601c9050919050565b6000611ef3611eee83611ed3565b611e59565b9050919050565b60008160801c9050919050565b6000611f1a611f1583611efa565b611e59565b9050919050565b6000611f34611f2f83611df8565b611e59565b9050919050565b60008160c01c9050919050565b6000611f5b611f5683611f3b565b611e59565b9050919050565b60008160e01c9050919050565b6000611f82611f7d83611f62565b611e59565b9050919050565b6000611f9482611e2c565b611f9e81856114fb565b935083611faa84611e37565b6000600115612097575b83600160080382011015612096578154611fd688611fd183611e6b565b611548565b602088019750611fee88611fe983611e92565b611548565b6020880197506120068861200183611eb9565b611548565b60208801975061201e8861201983611ee0565b611548565b6020880197506120368861203183611f07565b611548565b60208801975061204e8861204983611f21565b611548565b6020880197506120668861206183611f48565b611548565b60208801975061207e8861207983611f6f565b611548565b60208801975060018301925050600881019050611fb4565b5b6001156121da578154848210156120c7576120ba886120b583611e6b565b611548565b6020880197506001820191505b848210156120ee576120e1886120dc83611e92565b611548565b6020880197506001820191505b84821015612115576121088861210383611eb9565b611548565b6020880197506001820191505b8482101561213c5761212f8861212a83611ee0565b611548565b6020880197506001820191505b84821015612163576121568861215183611f07565b611548565b6020880197506001820191505b8482101561218a5761217d8861217883611f21565b611548565b6020880197506001820191505b848210156121b1576121a48861219f83611f48565b611548565b6020880197506001820191505b848210156121d8576121cb886121c683611f6f565b611548565b6020880197506001820191505b505b8694505050505092915050565b60006060830160008084015490506121fe81611dde565b61220b600087018261128a565b5061221581611e12565b61222260208701826114e1565b506001840185830360408701526122398382611f89565b925050819250505092915050565b600061225383836121e7565b905092915050565b6000600282019050919050565b600061227382611d80565b61227d8185611d8b565b93508360208202850161228f85611d9c565b8060005b858110156122ca578484038952816122ab8582612247565b94506122b68361225b565b925060208a01995050600181019050612293565b50829750879550505050505092915050565b60006080820190506122f16000830188611153565b6122fe6020830187611d33565b8181036040830152612311818587611d53565b905081810360608301526123258184612268565b90509695505050505050565b6000815190506123408161117d565b92915050565b60006020828403121561235c5761235b610e84565b5b600061236a84828501612331565b91505092915050565b61237c81611299565b82525050565b60006060820190506123976000830186611153565b6123a46020830185611153565b6123b16040830184612373565b949350505050565b7f4f6e6c7920746865206f776e6572206d61792075706c6f6164206e657720656360008201527f6f73797374656d2076657273696f6e732e000000000000000000000000000000602082015250565b6000612415603183611c90565b9150612420826123b9565b604082019050919050565b6000602082019050818103600083015261244481612408565b9050919050565b7f56657273696f6e20616c72656164792065786973747300000000000000000000600082015250565b6000612481601683611c90565b915061248c8261244b565b602082019050919050565b600060208201905081810360008301526124b081612474565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612520826117d3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415612553576125526124e6565b5b600182019050919050565b60006020820190506125736000830184612373565b92915050565b600060208201905061258e6000830184611d33565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220923df2d68a94c0fab05336438539fd9a084377dea0c9cedf99cdbff7b31f28ad64736f6c63430008090033";

type EcosystemRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EcosystemRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EcosystemRegistry__factory extends ContractFactory {
  constructor(...args: EcosystemRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _diamondDeployAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EcosystemRegistry> {
    return super.deploy(
      _diamondDeployAddress,
      overrides || {}
    ) as Promise<EcosystemRegistry>;
  }
  override getDeployTransaction(
    _diamondDeployAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_diamondDeployAddress, overrides || {});
  }
  override attach(address: string): EcosystemRegistry {
    return super.attach(address) as EcosystemRegistry;
  }
  override connect(signer: Signer): EcosystemRegistry__factory {
    return super.connect(signer) as EcosystemRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EcosystemRegistryInterface {
    return new utils.Interface(_abi) as EcosystemRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EcosystemRegistry {
    return new Contract(address, _abi, signerOrProvider) as EcosystemRegistry;
  }
}
