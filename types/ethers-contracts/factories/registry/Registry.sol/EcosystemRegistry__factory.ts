/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  EcosystemRegistry,
  EcosystemRegistryInterface,
} from "../../../registry/Registry.sol/EcosystemRegistry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MigrationAlreadyCompleted",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationAlreadyInitiated",
    type: "error",
  },
  {
    inputs: [],
    name: "MigrationNotInitiated",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ecosystem",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "EcosystemDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "cancellor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeCancelled",
        type: "uint32",
      },
    ],
    name: "MigrationCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "initiatior",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "timeInitiatied",
        type: "uint32",
      },
    ],
    name: "MigrationInitiated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "newVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "oldVersion",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ecosystemOwner",
        type: "address",
      },
    ],
    name: "VersionUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
    ],
    name: "VersionUploaded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "diamondBytecode",
        type: "bytes",
      },
    ],
    name: "deployVersion",
    outputs: [
      {
        internalType: "address",
        name: "ecosystemAddress_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "ecosystemsOwner",
        type: "address",
      },
    ],
    name: "getUserEcosystems",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "address",
            name: "ecosytemAddress",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "versionNumber",
            type: "bytes32",
          },
        ],
        internalType: "struct EcosystemRegistry.Ecosystem[]",
        name: "ecosystems_",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
    ],
    name: "getVersion",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "exists",
            type: "bool",
          },
          {
            internalType: "uint32",
            name: "uploadedTimestamp",
            type: "uint32",
          },
          {
            internalType: "address",
            name: "diamondDeployAddress",
            type: "address",
          },
          {
            components: [
              {
                internalType: "address",
                name: "facetAddress",
                type: "address",
              },
              {
                internalType: "enum IDiamondCut.FacetCutAction",
                name: "action",
                type: "uint8",
              },
              {
                internalType: "bytes4[]",
                name: "functionSelectors",
                type: "bytes4[]",
              },
            ],
            internalType: "struct IDiamondCut.FacetCut[]",
            name: "facetCuts",
            type: "tuple[]",
          },
        ],
        internalType: "struct EcosystemRegistry.Version",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint240",
        name: "mainVersion",
        type: "uint240",
      },
      {
        internalType: "bytes2",
        name: "optimizationType",
        type: "bytes2",
      },
      {
        internalType: "bytes",
        name: "bytecode",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "params",
        type: "bytes",
      },
    ],
    name: "registerOptimizationFacet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "versionNumber",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "diamondDeployAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "facetAddress",
            type: "address",
          },
          {
            internalType: "enum IDiamondCut.FacetCutAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes4[]",
            name: "functionSelectors",
            type: "bytes4[]",
          },
        ],
        internalType: "struct IDiamondCut.FacetCut[]",
        name: "facetCuts",
        type: "tuple[]",
      },
    ],
    name: "uploadVersion",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "versions",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "uint32",
        name: "uploadedTimestamp",
        type: "uint32",
      },
      {
        internalType: "address",
        name: "diamondDeployAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600e575f5ffd5b5060156038565b5f80546001600160a01b0319166001600160a01b03929092169190911790556094565b5f603f6044565b905090565b5f60143610801590607e57507f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca97776546001600160a01b031633145b15608f575060131936013560601c90565b503390565b611577806100a15f395ff3fe608060405234801561000f575f5ffd5b506004361061007a575f3560e01c806399811aaa1161005857806399811aaa146100d65780639aaf9f08146100f6578063b0c476ac14610116578063c7cec7f814610129575f5ffd5b806305de09061461007e5780630dc870fe146100945780638da5cb5b146100a7575b5f5ffd5b61009261008c366004610b05565b50505050565b005b6100926100a2366004610bd9565b610194565b5f546100b9906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e96100e4366004610d7a565b6103d1565b6040516100cd9190610dc3565b610109610104366004610e4f565b6104f5565b6040516100cd9190610ea8565b6100b9610124366004610fa6565b610689565b610169610137366004610e4f565b60016020525f908152604090205460ff811690610100810463ffffffff1690600160281b90046001600160a01b031683565b60408051931515845263ffffffff90921660208401526001600160a01b0316908201526060016100cd565b61019c610862565b6001600160a01b03166101ad610899565b50505f546001600160a01b03166101c2610899565b6001600160a01b0316146102375760405162461bcd60e51b815260206004820152603160248201527f4f6e6c7920746865206f776e6572206d61792075706c6f6164206e657720656360448201527037b9bcb9ba32b6903b32b939b4b7b7399760791b60648201526084015b60405180910390fd5b5f8381526001602052604090205460ff161561028e5760405162461bcd60e51b815260206004820152601660248201527556657273696f6e20616c72656164792065786973747360501b604482015260640161022e565b5f8381526001602081905260408220805464ffffffffff19166101004263ffffffff160260ff19161790911765010000000000600160c81b031916600160281b6001600160a01b03861602178155905b825181101561039757816001018382815181106102fd576102fd611067565b60209081029190910181015182546001810184555f938452928290208151600294850290910180546001600160a01b039092166001600160a01b0319831681178255938301519294909384926001600160a81b0319161790600160a01b90849081111561036c5761036c610e66565b02179055506040820151805161038c91600184019160209091019061095f565b5050506001016102de565b506040518481527f069531cbe027c42df80b5214535d631fc9ba056f8aa436132b6c229a2b08e90e9060200160405180910390a150505050565b6001600160a01b0381165f908152600260209081526040808320805482518185028101850190935280835260609492939192909184015b828210156104ea578382905f5260205f2090600302016040518060600160405290815f820180546104389061107b565b80601f01602080910402602001604051908101604052809291908181526020018280546104649061107b565b80156104af5780601f10610486576101008083540402835291602001916104af565b820191905f5260205f20905b81548152906001019060200180831161049257829003601f168201915b50505091835250506001828101546001600160a01b031660208084019190915260029093015460409092019190915291835292019101610408565b505050509050919050565b604080516080810182525f80825260208201819052918101919091526060808201525f8281526001602081815260408084208151608081018352815460ff811615158252610100810463ffffffff1682860152600160281b90046001600160a01b03168184015293810180548351818602810186019094528084529495919460608701949192909184015b8282101561067b575f8481526020908190206040805160608101909152600285810290920180546001600160a01b03811683529193909290840191600160a01b900460ff16908111156105d5576105d5610e66565b60028111156105e6576105e6610e66565b81526020016001820180548060200260200160405190810160405280929190818152602001828054801561066357602002820191905f5260205f20905f905b82829054906101000a900460e01b6001600160e01b031916815260200190600401906020826003010492830192600103820291508084116106255790505b50505050508152505081526020019060010190610580565b505050915250909392505050565b5f858152600160205260408120805460ff166106f25760405162461bcd60e51b815260206004820152602260248201527f56657273696f6e206973206e6f742076616c6964206f72206e6f742061637469604482015261766560f01b606482015260840161022e565b6106fc60016108a2565b8054600160281b90046001600160a01b031663f4615e3b61071b610899565b878787866001016040518663ffffffff1660e01b81526004016107429594939291906110b3565b6020604051808303815f875af115801561075e573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061078291906113e4565b915061078e60026108a2565b604080516060810182528781526001600160a01b0384166020808301919091528183018a9052335f908152600282529283208054600181018255908452922081519192839260039091029091019081906107e8908261144b565b5060208201516001820180546001600160a01b0319166001600160a01b03909216919091179055604091820151600290910155517f521e550cbc14548b23f70f10e549e7e12eea2a8a12a6e457881c38d7e7b6de699061084f90339086908c908c90611505565b60405180910390a1505095945050505050565b5f6108947fd00049dc7109015045860694acecd3dc33338404aaf6e55a1c98a2bf41477b85546001600160a01b031690565b905090565b5f6108946108ea565b6108e7816040516024016108b891815260200190565b60408051601f198184030181529190526020810180516001600160e01b031663f82c50f160e01b17905261093c565b50565b5f6014361080159061092557507f413a4c31c13c7c3de0c7da37be5d779b152baf3f21a1cb760fda41eb8ca97776546001600160a01b031633145b15610937575060131936013560601c90565b503390565b6108e7815f6a636f6e736f6c652e6c6f6790505f5f835160208501845afa505050565b828054828255905f5260205f20906007016008900481019282156109f8579160200282015f5b838211156109c657835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610985565b80156109f65782816101000a81549063ffffffff02191690556004016020816003010492830192600103026109c6565b505b50610a04929150610a08565b5090565b5b80821115610a04575f8155600101610a09565b634e487b7160e01b5f52604160045260245ffd5b604051606081016001600160401b0381118282101715610a5257610a52610a1c565b60405290565b604051601f8201601f191681016001600160401b0381118282101715610a8057610a80610a1c565b604052919050565b5f5f6001600160401b03841115610aa157610aa1610a1c565b50601f8301601f1916602001610ab681610a58565b915050828152838383011115610aca575f5ffd5b828260208301375f602084830101529392505050565b5f82601f830112610aef575f5ffd5b610afe83833560208501610a88565b9392505050565b5f5f5f5f60808587031215610b18575f5ffd5b84356001600160f01b0381168114610b2e575f5ffd5b935060208501356001600160f01b031981168114610b4a575f5ffd5b925060408501356001600160401b03811115610b64575f5ffd5b610b7087828801610ae0565b92505060608501356001600160401b03811115610b8b575f5ffd5b610b9787828801610ae0565b91505092959194509250565b6001600160a01b03811681146108e7575f5ffd5b5f6001600160401b03821115610bcf57610bcf610a1c565b5060051b60200190565b5f5f5f60608486031215610beb575f5ffd5b833592506020840135610bfd81610ba3565b915060408401356001600160401b03811115610c17575f5ffd5b8401601f81018613610c27575f5ffd5b8035610c3a610c3582610bb7565b610a58565b8082825260208201915060208360051b850101925088831115610c5b575f5ffd5b602084015b83811015610d6b5780356001600160401b03811115610c7d575f5ffd5b85016060818c03601f19011215610c92575f5ffd5b610c9a610a30565b6020820135610ca881610ba3565b8152604082013560038110610cbb575f5ffd5b602082015260608201356001600160401b03811115610cd8575f5ffd5b6020818401019250508b601f830112610cef575f5ffd5b8135610cfd610c3582610bb7565b8082825260208201915060208360051b86010192508e831115610d1e575f5ffd5b6020850194505b82851015610d555784356001600160e01b031981168114610d44575f5ffd5b825260209485019490910190610d25565b6040840152505084525060209283019201610c60565b50809450505050509250925092565b5f60208284031215610d8a575f5ffd5b8135610afe81610ba3565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b5f602082016020835280845180835260408501915060408160051b8601019250602086015f5b82811015610e4357603f198786030184528151805160608752610e0f6060880182610d95565b6020838101516001600160a01b03168982015260409384015193909801929092525094938401939190910190600101610de9565b50929695505050505050565b5f60208284031215610e5f575f5ffd5b5035919050565b634e487b7160e01b5f52602160045260245ffd5b60038110610e9657634e487b7160e01b5f52602160045260245ffd5b9052565b6001600160e01b0319169052565b602081525f60a0820183511515602084015263ffffffff602085015116604084015260018060a01b036040850151166060840152606084015160808085015281815180845260c08601915060c08160051b87010193506020830192505f5b81811015610e435786850360bf19018352835180516001600160a01b031686526020808201516060880191610f3d90890182610e7a565b5060408201519150606060408801528082518083526080890191506020840193505f92505b80831015610f8e5783516001600160e01b03191682526020938401936001939093019290910190610f62565b50965050506020938401939290920191600101610f06565b5f5f5f5f5f60808688031215610fba575f5ffd5b8535945060208601356001600160401b03811115610fd6575f5ffd5b8601601f81018813610fe6575f5ffd5b610ff588823560208401610a88565b9450506040860135925060608601356001600160401b03811115611017575f5ffd5b86015f80601f83018a13611029575f5ffd5b5081356001600160401b0381111561103f575f5ffd5b602083019150896020828501011115611056575f5ffd5b969995985093965092949392505050565b634e487b7160e01b5f52603260045260245ffd5b600181811c9082168061108f57607f821691505b6020821081036110ad57634e487b7160e01b5f52602260045260245ffd5b50919050565b6001600160a01b0386168152602081018590526080604082018190528101839052828460a08301375f60a084830101525f601f19601f850116820160a0810160a084830301606085015280855480835260c084019150602060a08260051b860101019250865f5260205f205f5b828110156113d35760bf1986860301845281546001600160a01b038116865260608601906111586020880160a083901c60ff16610e7a565b50606060408701526001830180548083525f91825260208083209301905b80600784011015611262578354611190838260e01b610e9a565b6111ab6020840160c083901b6001600160e01b031916610e9a565b6111c66040840160a083901b6001600160e01b031916610e9a565b6111e160608401608083901b6001600160e01b031916610e9a565b6111fc60808401606083901b6001600160e01b031916610e9a565b61121760a08401604083901b6001600160e01b031916610e9a565b61123260c08401602083901b6001600160e01b031916610e9a565b61124960e084016001600160e01b03198316610e9a565b5061010082019150600184019350600883019250611176565b925492808310156112875761127a828560e01b610e9a565b6020820191506001830192505b808310156112b4576112a78260c086901b6001600160e01b031916610e9a565b6020820191506001830192505b808310156112e1576112d48260a086901b6001600160e01b031916610e9a565b6020820191506001830192505b8083101561130e5761130182608086901b6001600160e01b031916610e9a565b6020820191506001830192505b8083101561133b5761132e82606086901b6001600160e01b031916610e9a565b6020820191506001830192505b808310156113685761135b82604086901b6001600160e01b031916610e9a565b6020820191506001830192505b808310156113955761138882602086901b6001600160e01b031916610e9a565b6020820191506001830192505b808310156113b8576113b1826001600160e01b03198616610e9a565b6020820191505b50965050506020939093019260029190910190600101611120565b50929b9a5050505050505050505050565b5f602082840312156113f4575f5ffd5b8151610afe81610ba3565b601f82111561144657805f5260205f20601f840160051c810160208510156114245750805b601f840160051c820191505b81811015611443575f8155600101611430565b50505b505050565b81516001600160401b0381111561146457611464610a1c565b61147881611472845461107b565b846113ff565b6020601f8211600181146114aa575f83156114935750848201515b5f19600385901b1c1916600184901b178455611443565b5f84815260208120601f198516915b828110156114d957878501518255602094850194600190920191016114b9565b50848210156114f657868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f9061153790830184610d95565b969550505050505056fea2646970667358221220d8d9d2104dc1773c52610abff2657d5c154ddffb2046eb5b2b6975aa9d9b35a864736f6c634300081c0033";

type EcosystemRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EcosystemRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EcosystemRegistry__factory extends ContractFactory {
  constructor(...args: EcosystemRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<EcosystemRegistry> {
    return super.deploy(overrides || {}) as Promise<EcosystemRegistry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): EcosystemRegistry {
    return super.attach(address) as EcosystemRegistry;
  }
  override connect(signer: Signer): EcosystemRegistry__factory {
    return super.connect(signer) as EcosystemRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EcosystemRegistryInterface {
    return new utils.Interface(_abi) as EcosystemRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): EcosystemRegistry {
    return new Contract(address, _abi, signerOrProvider) as EcosystemRegistry;
  }
}
